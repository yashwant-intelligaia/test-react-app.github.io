{"ast":null,"code":"\"use strict\";\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nvar BaseXform = require('../base-xform');\n\nvar ColorXform = require('../style/color-xform');\n\nvar PageSetupPropertiesXform = require('./page-setup-properties-xform');\n\nvar OutlinePropertiesXform = require('./outline-properties-xform');\n\nvar SheetPropertiesXform = /*#__PURE__*/function (_BaseXform) {\n  _inherits(SheetPropertiesXform, _BaseXform);\n\n  var _super = _createSuper(SheetPropertiesXform);\n\n  function SheetPropertiesXform() {\n    var _this;\n\n    _classCallCheck(this, SheetPropertiesXform);\n\n    _this = _super.call(this);\n    _this.map = {\n      tabColor: new ColorXform('tabColor'),\n      pageSetUpPr: new PageSetupPropertiesXform(),\n      outlinePr: new OutlinePropertiesXform()\n    };\n    return _this;\n  }\n\n  _createClass(SheetPropertiesXform, [{\n    key: \"render\",\n    value: function render(xmlStream, model) {\n      if (model) {\n        xmlStream.addRollback();\n        xmlStream.openNode('sheetPr');\n        var inner = false;\n        inner = this.map.tabColor.render(xmlStream, model.tabColor) || inner;\n        inner = this.map.pageSetUpPr.render(xmlStream, model.pageSetup) || inner;\n        inner = this.map.outlinePr.render(xmlStream, model.outlineProperties) || inner;\n\n        if (inner) {\n          xmlStream.closeNode();\n          xmlStream.commit();\n        } else {\n          xmlStream.rollback();\n        }\n      }\n    }\n  }, {\n    key: \"parseOpen\",\n    value: function parseOpen(node) {\n      if (this.parser) {\n        this.parser.parseOpen(node);\n        return true;\n      }\n\n      if (node.name === this.tag) {\n        this.reset();\n        return true;\n      }\n\n      if (this.map[node.name]) {\n        this.parser = this.map[node.name];\n        this.parser.parseOpen(node);\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"parseText\",\n    value: function parseText(text) {\n      if (this.parser) {\n        this.parser.parseText(text);\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"parseClose\",\n    value: function parseClose(name) {\n      if (this.parser) {\n        if (!this.parser.parseClose(name)) {\n          this.parser = undefined;\n        }\n\n        return true;\n      }\n\n      if (this.map.tabColor.model || this.map.pageSetUpPr.model || this.map.outlinePr.model) {\n        this.model = {};\n\n        if (this.map.tabColor.model) {\n          this.model.tabColor = this.map.tabColor.model;\n        }\n\n        if (this.map.pageSetUpPr.model) {\n          this.model.pageSetup = this.map.pageSetUpPr.model;\n        }\n\n        if (this.map.outlinePr.model) {\n          this.model.outlineProperties = this.map.outlinePr.model;\n        }\n      } else {\n        this.model = null;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"tag\",\n    get: function get() {\n      return 'sheetPr';\n    }\n  }]);\n\n  return SheetPropertiesXform;\n}(BaseXform);\n\nmodule.exports = SheetPropertiesXform;","map":{"version":3,"sources":["../../../../../lib/xlsx/xform/sheet/sheet-properties-xform.js"],"names":["BaseXform","require","ColorXform","PageSetupPropertiesXform","OutlinePropertiesXform","SheetPropertiesXform","tabColor","pageSetUpPr","outlinePr","xmlStream","model","inner","node","text","name","module"],"mappings":"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","sourcesContent":["const BaseXform = require('../base-xform');\r\nconst ColorXform = require('../style/color-xform');\r\nconst PageSetupPropertiesXform = require('./page-setup-properties-xform');\r\nconst OutlinePropertiesXform = require('./outline-properties-xform');\r\n\r\nclass SheetPropertiesXform extends BaseXform {\r\n  constructor() {\r\n    super();\r\n\r\n    this.map = {\r\n      tabColor: new ColorXform('tabColor'),\r\n      pageSetUpPr: new PageSetupPropertiesXform(),\r\n      outlinePr: new OutlinePropertiesXform(),\r\n    };\r\n  }\r\n\r\n  get tag() {\r\n    return 'sheetPr';\r\n  }\r\n\r\n  render(xmlStream, model) {\r\n    if (model) {\r\n      xmlStream.addRollback();\r\n      xmlStream.openNode('sheetPr');\r\n\r\n      let inner = false;\r\n      inner = this.map.tabColor.render(xmlStream, model.tabColor) || inner;\r\n      inner = this.map.pageSetUpPr.render(xmlStream, model.pageSetup) || inner;\r\n      inner = this.map.outlinePr.render(xmlStream, model.outlineProperties) || inner;\r\n\r\n      if (inner) {\r\n        xmlStream.closeNode();\r\n        xmlStream.commit();\r\n      } else {\r\n        xmlStream.rollback();\r\n      }\r\n    }\r\n  }\r\n\r\n  parseOpen(node) {\r\n    if (this.parser) {\r\n      this.parser.parseOpen(node);\r\n      return true;\r\n    }\r\n    if (node.name === this.tag) {\r\n      this.reset();\r\n      return true;\r\n    }\r\n    if (this.map[node.name]) {\r\n      this.parser = this.map[node.name];\r\n      this.parser.parseOpen(node);\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  parseText(text) {\r\n    if (this.parser) {\r\n      this.parser.parseText(text);\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  parseClose(name) {\r\n    if (this.parser) {\r\n      if (!this.parser.parseClose(name)) {\r\n        this.parser = undefined;\r\n      }\r\n      return true;\r\n    }\r\n    if (this.map.tabColor.model || this.map.pageSetUpPr.model || this.map.outlinePr.model) {\r\n      this.model = {};\r\n      if (this.map.tabColor.model) {\r\n        this.model.tabColor = this.map.tabColor.model;\r\n      }\r\n      if (this.map.pageSetUpPr.model) {\r\n        this.model.pageSetup = this.map.pageSetUpPr.model;\r\n      }\r\n      if (this.map.outlinePr.model) {\r\n        this.model.outlineProperties = this.map.outlinePr.model;\r\n      }\r\n    } else {\r\n      this.model = null;\r\n    }\r\n    return false;\r\n  }\r\n}\r\n\r\nmodule.exports = SheetPropertiesXform;\r\n"]},"metadata":{},"sourceType":"script"}