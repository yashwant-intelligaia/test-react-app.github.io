{"ast":null,"code":"\"use strict\";\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nvar toString = Object.prototype.toString;\nvar escapeHtmlRegex = /[\"&<>]/;\nvar _ = {\n  each: function each(obj, cb) {\n    if (obj) {\n      if (Array.isArray(obj)) {\n        obj.forEach(cb);\n      } else {\n        Object.keys(obj).forEach(function (key) {\n          cb(obj[key], key);\n        });\n      }\n    }\n  },\n  some: function some(obj, cb) {\n    if (obj) {\n      if (Array.isArray(obj)) {\n        return obj.some(cb);\n      }\n\n      return Object.keys(obj).some(function (key) {\n        return cb(obj[key], key);\n      });\n    }\n\n    return false;\n  },\n  every: function every(obj, cb) {\n    if (obj) {\n      if (Array.isArray(obj)) {\n        return obj.every(cb);\n      }\n\n      return Object.keys(obj).every(function (key) {\n        return cb(obj[key], key);\n      });\n    }\n\n    return true;\n  },\n  map: function map(obj, cb) {\n    if (obj) {\n      if (Array.isArray(obj)) {\n        return obj.map(cb);\n      }\n\n      return Object.keys(obj).map(function (key) {\n        return cb(obj[key], key);\n      });\n    }\n\n    return [];\n  },\n  keyBy: function keyBy(a, p) {\n    return a.reduce(function (o, v) {\n      o[v[p]] = v;\n      return o;\n    }, {});\n  },\n  isEqual: function isEqual(a, b) {\n    var aType = _typeof(a);\n\n    var bType = _typeof(b);\n\n    var aArray = Array.isArray(a);\n    var bArray = Array.isArray(b);\n\n    if (aType !== bType) {\n      return false;\n    }\n\n    switch (_typeof(a)) {\n      case 'object':\n        if (aArray || bArray) {\n          if (aArray && bArray) {\n            return a.length === b.length && a.every(function (aValue, index) {\n              var bValue = b[index];\n              return _.isEqual(aValue, bValue);\n            });\n          }\n\n          return false;\n        }\n\n        return _.every(a, function (aValue, key) {\n          var bValue = b[key];\n          return _.isEqual(aValue, bValue);\n        });\n\n      default:\n        return a === b;\n    }\n  },\n  escapeHtml: function escapeHtml(html) {\n    var regexResult = escapeHtmlRegex.exec(html);\n    if (!regexResult) return html;\n    var result = '';\n    var escape = '';\n    var lastIndex = 0;\n    var i = regexResult.index;\n\n    for (; i < html.length; i++) {\n      switch (html.charAt(i)) {\n        case '\"':\n          escape = '&quot;';\n          break;\n\n        case '&':\n          escape = '&amp;';\n          break;\n\n        case \"'\":\n          escape = '&apos;';\n          break;\n\n        case '<':\n          escape = '&lt;';\n          break;\n\n        case '>':\n          escape = '&gt;';\n          break;\n\n        default:\n          continue;\n      }\n\n      if (lastIndex !== i) result += html.substring(lastIndex, i);\n      lastIndex = i + 1;\n      result += escape;\n    }\n\n    if (lastIndex !== i) return result + html.substring(lastIndex, i);\n    return result;\n  },\n  strcmp: function strcmp(a, b) {\n    if (a < b) return -1;\n    if (a > b) return 1;\n    return 0;\n  },\n  isUndefined: function isUndefined(val) {\n    return toString.call(val) === '[object Undefined]';\n  },\n  isObject: function isObject(val) {\n    return toString.call(val) === '[object Object]';\n  },\n  deepMerge: function deepMerge() {\n    var target = arguments[0] || {};\n    var length = arguments.length; // eslint-disable-next-line one-var\n\n    var src, clone, copyIsArray;\n\n    function assignValue(val, key) {\n      src = target[key];\n      copyIsArray = Array.isArray(val);\n\n      if (_.isObject(val) || copyIsArray) {\n        if (copyIsArray) {\n          copyIsArray = false;\n          clone = src && Array.isArray(src) ? src : [];\n        } else {\n          clone = src && _.isObject(src) ? src : {};\n        }\n\n        target[key] = _.deepMerge(clone, val);\n      } else if (!_.isUndefined(val)) {\n        target[key] = val;\n      }\n    }\n\n    for (var i = 0; i < length; i++) {\n      _.each(arguments[i], assignValue);\n    }\n\n    return target;\n  }\n};\nmodule.exports = _;","map":{"version":3,"sources":["../../../lib/utils/under-dash.js"],"names":["toString","Object","prototype","escapeHtmlRegex","_","each","Array","obj","cb","some","every","map","keyBy","o","v","isEqual","aType","bType","aArray","bArray","a","b","bValue","escapeHtml","regexResult","result","escape","lastIndex","i","html","strcmp","isUndefined","isObject","deepMerge","target","arguments","length","src","copyIsArray","clone","module"],"mappings":"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","sourcesContent":["const {toString} = Object.prototype;\r\nconst escapeHtmlRegex = /[\"&<>]/;\r\nconst _ = {\r\n  each: function each(obj, cb) {\r\n    if (obj) {\r\n      if (Array.isArray(obj)) {\r\n        obj.forEach(cb);\r\n      } else {\r\n        Object.keys(obj).forEach(key => {\r\n          cb(obj[key], key);\r\n        });\r\n      }\r\n    }\r\n  },\r\n\r\n  some: function some(obj, cb) {\r\n    if (obj) {\r\n      if (Array.isArray(obj)) {\r\n        return obj.some(cb);\r\n      }\r\n      return Object.keys(obj).some(key => cb(obj[key], key));\r\n    }\r\n    return false;\r\n  },\r\n\r\n  every: function every(obj, cb) {\r\n    if (obj) {\r\n      if (Array.isArray(obj)) {\r\n        return obj.every(cb);\r\n      }\r\n      return Object.keys(obj).every(key => cb(obj[key], key));\r\n    }\r\n    return true;\r\n  },\r\n\r\n  map: function map(obj, cb) {\r\n    if (obj) {\r\n      if (Array.isArray(obj)) {\r\n        return obj.map(cb);\r\n      }\r\n      return Object.keys(obj).map(key => cb(obj[key], key));\r\n    }\r\n    return [];\r\n  },\r\n\r\n  keyBy(a, p) {\r\n    return a.reduce((o, v) => {\r\n      o[v[p]] = v;\r\n      return o;\r\n    }, {});\r\n  },\r\n\r\n  isEqual: function isEqual(a, b) {\r\n    const aType = typeof a;\r\n    const bType = typeof b;\r\n    const aArray = Array.isArray(a);\r\n    const bArray = Array.isArray(b);\r\n\r\n    if (aType !== bType) {\r\n      return false;\r\n    }\r\n    switch (typeof a) {\r\n      case 'object':\r\n        if (aArray || bArray) {\r\n          if (aArray && bArray) {\r\n            return (\r\n              a.length === b.length &&\r\n              a.every((aValue, index) => {\r\n                const bValue = b[index];\r\n                return _.isEqual(aValue, bValue);\r\n              })\r\n            );\r\n          }\r\n          return false;\r\n        }\r\n        return _.every(a, (aValue, key) => {\r\n          const bValue = b[key];\r\n          return _.isEqual(aValue, bValue);\r\n        });\r\n\r\n      default:\r\n        return a === b;\r\n    }\r\n  },\r\n\r\n  escapeHtml(html) {\r\n    const regexResult = escapeHtmlRegex.exec(html);\r\n    if (!regexResult) return html;\r\n\r\n    let result = '';\r\n    let escape = '';\r\n    let lastIndex = 0;\r\n    let i = regexResult.index;\r\n    for (; i < html.length; i++) {\r\n      switch (html.charAt(i)) {\r\n        case '\"':\r\n          escape = '&quot;';\r\n          break;\r\n        case '&':\r\n          escape = '&amp;';\r\n          break;\r\n        case \"'\":\r\n          escape = '&apos;';\r\n          break;\r\n        case '<':\r\n          escape = '&lt;';\r\n          break;\r\n        case '>':\r\n          escape = '&gt;';\r\n          break;\r\n        default:\r\n          continue;\r\n      }\r\n      if (lastIndex !== i) result += html.substring(lastIndex, i);\r\n      lastIndex = i + 1;\r\n      result += escape;\r\n    }\r\n    if (lastIndex !== i) return result + html.substring(lastIndex, i);\r\n    return result;\r\n  },\r\n\r\n  strcmp(a, b) {\r\n    if (a < b) return -1;\r\n    if (a > b) return 1;\r\n    return 0;\r\n  },\r\n\r\n  isUndefined(val) {\r\n    return toString.call(val) === '[object Undefined]';\r\n  },\r\n\r\n  isObject(val) {\r\n    return toString.call(val) === '[object Object]';\r\n  },\r\n\r\n  deepMerge() {\r\n    const target = arguments[0] || {};\r\n    const {length} = arguments;\r\n    // eslint-disable-next-line one-var\r\n    let src, clone, copyIsArray;\r\n\r\n    function assignValue(val, key) {\r\n      src = target[key];\r\n      copyIsArray = Array.isArray(val);\r\n      if (_.isObject(val) || copyIsArray) {\r\n        if (copyIsArray) {\r\n          copyIsArray = false;\r\n          clone = src && Array.isArray(src) ? src : [];\r\n        } else {\r\n          clone = src && _.isObject(src) ? src : {};\r\n        }\r\n        target[key] = _.deepMerge(clone, val);\r\n      } else if (!_.isUndefined(val)) {\r\n        target[key] = val;\r\n      }\r\n    }\r\n\r\n    for (let i = 0; i < length; i++) {\r\n      _.each(arguments[i], assignValue);\r\n    }\r\n    return target;\r\n  },\r\n};\r\n\r\nmodule.exports = _;\r\n"]},"metadata":{},"sourceType":"script"}