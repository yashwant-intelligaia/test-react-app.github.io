{"ast":null,"code":"\"use strict\";\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nvar _ = require('../utils/under-dash');\n\nvar Note = /*#__PURE__*/function () {\n  function Note(note) {\n    _classCallCheck(this, Note);\n\n    this.note = note;\n  }\n\n  _createClass(Note, [{\n    key: \"model\",\n    get: function get() {\n      var value = null;\n\n      switch (_typeof(this.note)) {\n        case 'string':\n          value = {\n            type: 'note',\n            note: {\n              texts: [{\n                text: this.note\n              }]\n            }\n          };\n          break;\n\n        default:\n          value = {\n            type: 'note',\n            note: this.note\n          };\n          break;\n      } // Suitable for all cell comments\n\n\n      return _.deepMerge({}, Note.DEFAULT_CONFIGS, value);\n    },\n    set: function set(value) {\n      var note = value.note;\n      var texts = note.texts;\n\n      if (texts.length === 1 && Object.keys(texts[0]).length === 1) {\n        this.note = texts[0].text;\n      } else {\n        this.note = note;\n      }\n    }\n  }], [{\n    key: \"fromModel\",\n    value: function fromModel(model) {\n      var note = new Note();\n      note.model = model;\n      return note;\n    }\n  }]);\n\n  return Note;\n}();\n\nNote.DEFAULT_CONFIGS = {\n  note: {\n    margins: {\n      insetmode: 'auto',\n      inset: [0.13, 0.13, 0.25, 0.25]\n    },\n    protection: {\n      locked: 'True',\n      lockText: 'True'\n    },\n    editAs: 'absolute'\n  }\n};\nmodule.exports = Note;","map":{"version":3,"sources":["../../../lib/doc/note.js"],"names":["_","require","Note","value","type","note","texts","text","Object","model","margins","insetmode","inset","protection","locked","lockText","editAs","module"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAMA,CAAC,GAAGC,OAAO,CAAjB,qBAAiB,CAAjB;;IAEMC,I;AACJ,WAAA,IAAA,CAAA,IAAA,EAAkB;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,IAAA,CAAA;;AAChB,SAAA,IAAA,GAAA,IAAA;AACD;;;;wBAEW;AACV,UAAIC,KAAK,GAAT,IAAA;;AACA,cAAA,OAAA,CAAe,KAAf,IAAA,CAAA;AACE,aAAA,QAAA;AACEA,UAAAA,KAAK,GAAG;AACNC,YAAAA,IAAI,EADE,MAAA;AAENC,YAAAA,IAAI,EAAE;AACJC,cAAAA,KAAK,EAAE,CACL;AACEC,gBAAAA,IAAI,EAAE,KAAKF;AADb,eADK;AADH;AAFA,WAARF;AAUA;;AACF;AACEA,UAAAA,KAAK,GAAG;AACNC,YAAAA,IAAI,EADE,MAAA;AAENC,YAAAA,IAAI,EAAE,KAAKA;AAFL,WAARF;AAIA;AAlBJ,OAFU,CAsBV;;;AACA,aAAOH,CAAC,CAADA,SAAAA,CAAAA,EAAAA,EAAgBE,IAAI,CAApBF,eAAAA,EAAP,KAAOA,CAAP;;sBAGQG,K,EAAO;AAAA,UACRE,IADQ,GACAF,KADA,CAAA,IAAA;AAAA,UAERG,KAFQ,GAECD,IAFD,CAAA,KAAA;;AAGf,UAAIC,KAAK,CAALA,MAAAA,KAAAA,CAAAA,IAAsBE,MAAM,CAANA,IAAAA,CAAYF,KAAK,CAAjBE,CAAiB,CAAjBA,EAAAA,MAAAA,KAA1B,CAAA,EAA8D;AAC5D,aAAA,IAAA,GAAYF,KAAK,CAALA,CAAK,CAALA,CAAZ,IAAA;AADF,OAAA,MAEO;AACL,aAAA,IAAA,GAAA,IAAA;AACD;AACF;;;8BAEgBG,K,EAAO;AACtB,UAAMJ,IAAI,GAAG,IAAb,IAAa,EAAb;AACAA,MAAAA,IAAI,CAAJA,KAAAA,GAAAA,KAAAA;AACA,aAAA,IAAA;AACD;;;;;;AAGHH,IAAI,CAAJA,eAAAA,GAAuB;AACrBG,EAAAA,IAAI,EAAE;AACJK,IAAAA,OAAO,EAAE;AACPC,MAAAA,SAAS,EADF,MAAA;AAEPC,MAAAA,KAAK,EAAE,CAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA;AAFA,KADL;AAKJC,IAAAA,UAAU,EAAE;AACVC,MAAAA,MAAM,EADI,MAAA;AAEVC,MAAAA,QAAQ,EAAE;AAFA,KALR;AASJC,IAAAA,MAAM,EAAE;AATJ;AADe,CAAvBd;AAcAe,MAAM,CAANA,OAAAA,GAAAA,IAAAA","sourcesContent":["const _ = require('../utils/under-dash');\r\n\r\nclass Note {\r\n  constructor(note) {\r\n    this.note = note;\r\n  }\r\n\r\n  get model() {\r\n    let value = null;\r\n    switch (typeof this.note) {\r\n      case 'string':\r\n        value = {\r\n          type: 'note',\r\n          note: {\r\n            texts: [\r\n              {\r\n                text: this.note,\r\n              },\r\n            ],\r\n          },\r\n        };\r\n        break;\r\n      default:\r\n        value = {\r\n          type: 'note',\r\n          note: this.note,\r\n        };\r\n        break;\r\n    }\r\n    // Suitable for all cell comments\r\n    return _.deepMerge({}, Note.DEFAULT_CONFIGS, value);\r\n  }\r\n\r\n  set model(value) {\r\n    const {note} = value;\r\n    const {texts} = note;\r\n    if (texts.length === 1 && Object.keys(texts[0]).length === 1) {\r\n      this.note = texts[0].text;\r\n    } else {\r\n      this.note = note;\r\n    }\r\n  }\r\n\r\n  static fromModel(model) {\r\n    const note = new Note();\r\n    note.model = model;\r\n    return note;\r\n  }\r\n}\r\n\r\nNote.DEFAULT_CONFIGS = {\r\n  note: {\r\n    margins: {\r\n      insetmode: 'auto',\r\n      inset: [0.13, 0.13, 0.25, 0.25],\r\n    },\r\n    protection: {\r\n      locked: 'True',\r\n      lockText: 'True',\r\n    },\r\n    editAs: 'absolute',\r\n  },\r\n};\r\n\r\nmodule.exports = Note;\r\n"]},"metadata":{},"sourceType":"script"}