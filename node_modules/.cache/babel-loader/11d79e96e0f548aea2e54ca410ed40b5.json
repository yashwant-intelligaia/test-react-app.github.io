{"ast":null,"code":"\"use strict\";\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nvar _ = require('../../../utils/under-dash');\n\nvar BaseXform = require('../base-xform');\n\nfunction booleanToXml(model) {\n  return model ? '1' : undefined;\n}\n\nfunction pageOrderToXml(model) {\n  switch (model) {\n    case 'overThenDown':\n      return model;\n\n    default:\n      return undefined;\n  }\n}\n\nfunction cellCommentsToXml(model) {\n  switch (model) {\n    case 'atEnd':\n    case 'asDisplyed':\n      return model;\n\n    default:\n      return undefined;\n  }\n}\n\nfunction errorsToXml(model) {\n  switch (model) {\n    case 'dash':\n    case 'blank':\n    case 'NA':\n      return model;\n\n    default:\n      return undefined;\n  }\n}\n\nfunction pageSizeToModel(value) {\n  return value !== undefined ? parseInt(value, 10) : undefined;\n}\n\nvar PageSetupXform = /*#__PURE__*/function (_BaseXform) {\n  _inherits(PageSetupXform, _BaseXform);\n\n  var _super = _createSuper(PageSetupXform);\n\n  function PageSetupXform() {\n    _classCallCheck(this, PageSetupXform);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(PageSetupXform, [{\n    key: \"render\",\n    value: function render(xmlStream, model) {\n      if (model) {\n        var attributes = {\n          paperSize: model.paperSize,\n          orientation: model.orientation,\n          horizontalDpi: model.horizontalDpi,\n          verticalDpi: model.verticalDpi,\n          pageOrder: pageOrderToXml(model.pageOrder),\n          blackAndWhite: booleanToXml(model.blackAndWhite),\n          draft: booleanToXml(model.draft),\n          cellComments: cellCommentsToXml(model.cellComments),\n          errors: errorsToXml(model.errors),\n          scale: model.scale,\n          fitToWidth: model.fitToWidth,\n          fitToHeight: model.fitToHeight,\n          firstPageNumber: model.firstPageNumber,\n          useFirstPageNumber: booleanToXml(model.firstPageNumber),\n          usePrinterDefaults: booleanToXml(model.usePrinterDefaults),\n          copies: model.copies\n        };\n\n        if (_.some(attributes, function (value) {\n          return value !== undefined;\n        })) {\n          xmlStream.leafNode(this.tag, attributes);\n        }\n      }\n    }\n  }, {\n    key: \"parseOpen\",\n    value: function parseOpen(node) {\n      switch (node.name) {\n        case this.tag:\n          this.model = {\n            paperSize: pageSizeToModel(node.attributes.paperSize),\n            orientation: node.attributes.orientation || 'portrait',\n            horizontalDpi: parseInt(node.attributes.horizontalDpi || '4294967295', 10),\n            verticalDpi: parseInt(node.attributes.verticalDpi || '4294967295', 10),\n            pageOrder: node.attributes.pageOrder || 'downThenOver',\n            blackAndWhite: node.attributes.blackAndWhite === '1',\n            draft: node.attributes.draft === '1',\n            cellComments: node.attributes.cellComments || 'None',\n            errors: node.attributes.errors || 'displayed',\n            scale: parseInt(node.attributes.scale || '100', 10),\n            fitToWidth: parseInt(node.attributes.fitToWidth || '1', 10),\n            fitToHeight: parseInt(node.attributes.fitToHeight || '1', 10),\n            firstPageNumber: parseInt(node.attributes.firstPageNumber || '1', 10),\n            useFirstPageNumber: node.attributes.useFirstPageNumber === '1',\n            usePrinterDefaults: node.attributes.usePrinterDefaults === '1',\n            copies: parseInt(node.attributes.copies || '1', 10)\n          };\n          return true;\n\n        default:\n          return false;\n      }\n    }\n  }, {\n    key: \"parseText\",\n    value: function parseText() {}\n  }, {\n    key: \"parseClose\",\n    value: function parseClose() {\n      return false;\n    }\n  }, {\n    key: \"tag\",\n    get: function get() {\n      return 'pageSetup';\n    }\n  }]);\n\n  return PageSetupXform;\n}(BaseXform);\n\nmodule.exports = PageSetupXform;","map":{"version":3,"sources":["../../../../../lib/xlsx/xform/sheet/page-setup-xform.js"],"names":["_","require","BaseXform","model","value","parseInt","PageSetupXform","xmlStream","attributes","paperSize","orientation","horizontalDpi","verticalDpi","pageOrder","pageOrderToXml","blackAndWhite","booleanToXml","draft","cellComments","cellCommentsToXml","errors","errorsToXml","scale","fitToWidth","fitToHeight","firstPageNumber","useFirstPageNumber","usePrinterDefaults","copies","node","pageSizeToModel","module"],"mappings":"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","sourcesContent":["const _ = require('../../../utils/under-dash');\r\nconst BaseXform = require('../base-xform');\r\n\r\nfunction booleanToXml(model) {\r\n  return model ? '1' : undefined;\r\n}\r\nfunction pageOrderToXml(model) {\r\n  switch (model) {\r\n    case 'overThenDown':\r\n      return model;\r\n    default:\r\n      return undefined;\r\n  }\r\n}\r\nfunction cellCommentsToXml(model) {\r\n  switch (model) {\r\n    case 'atEnd':\r\n    case 'asDisplyed':\r\n      return model;\r\n    default:\r\n      return undefined;\r\n  }\r\n}\r\nfunction errorsToXml(model) {\r\n  switch (model) {\r\n    case 'dash':\r\n    case 'blank':\r\n    case 'NA':\r\n      return model;\r\n    default:\r\n      return undefined;\r\n  }\r\n}\r\nfunction pageSizeToModel(value) {\r\n  return value !== undefined ? parseInt(value, 10) : undefined;\r\n}\r\n\r\nclass PageSetupXform extends BaseXform {\r\n  get tag() {\r\n    return 'pageSetup';\r\n  }\r\n\r\n  render(xmlStream, model) {\r\n    if (model) {\r\n      const attributes = {\r\n        paperSize: model.paperSize,\r\n        orientation: model.orientation,\r\n        horizontalDpi: model.horizontalDpi,\r\n        verticalDpi: model.verticalDpi,\r\n        pageOrder: pageOrderToXml(model.pageOrder),\r\n        blackAndWhite: booleanToXml(model.blackAndWhite),\r\n        draft: booleanToXml(model.draft),\r\n        cellComments: cellCommentsToXml(model.cellComments),\r\n        errors: errorsToXml(model.errors),\r\n        scale: model.scale,\r\n        fitToWidth: model.fitToWidth,\r\n        fitToHeight: model.fitToHeight,\r\n        firstPageNumber: model.firstPageNumber,\r\n        useFirstPageNumber: booleanToXml(model.firstPageNumber),\r\n        usePrinterDefaults: booleanToXml(model.usePrinterDefaults),\r\n        copies: model.copies,\r\n      };\r\n      if (_.some(attributes, value => value !== undefined)) {\r\n        xmlStream.leafNode(this.tag, attributes);\r\n      }\r\n    }\r\n  }\r\n\r\n  parseOpen(node) {\r\n    switch (node.name) {\r\n      case this.tag:\r\n        this.model = {\r\n          paperSize: pageSizeToModel(node.attributes.paperSize),\r\n          orientation: node.attributes.orientation || 'portrait',\r\n          horizontalDpi: parseInt(node.attributes.horizontalDpi || '4294967295', 10),\r\n          verticalDpi: parseInt(node.attributes.verticalDpi || '4294967295', 10),\r\n          pageOrder: node.attributes.pageOrder || 'downThenOver',\r\n          blackAndWhite: node.attributes.blackAndWhite === '1',\r\n          draft: node.attributes.draft === '1',\r\n          cellComments: node.attributes.cellComments || 'None',\r\n          errors: node.attributes.errors || 'displayed',\r\n          scale: parseInt(node.attributes.scale || '100', 10),\r\n          fitToWidth: parseInt(node.attributes.fitToWidth || '1', 10),\r\n          fitToHeight: parseInt(node.attributes.fitToHeight || '1', 10),\r\n          firstPageNumber: parseInt(node.attributes.firstPageNumber || '1', 10),\r\n          useFirstPageNumber: node.attributes.useFirstPageNumber === '1',\r\n          usePrinterDefaults: node.attributes.usePrinterDefaults === '1',\r\n          copies: parseInt(node.attributes.copies || '1', 10),\r\n        };\r\n        return true;\r\n      default:\r\n        return false;\r\n    }\r\n  }\r\n\r\n  parseText() {}\r\n\r\n  parseClose() {\r\n    return false;\r\n  }\r\n}\r\n\r\nmodule.exports = PageSetupXform;\r\n"]},"metadata":{},"sourceType":"script"}