{"ast":null,"code":"\"use strict\";\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nvar _ = require('../../../utils/under-dash');\n\nvar BaseXform = require('../base-xform');\n\nvar PageMarginsXform = /*#__PURE__*/function (_BaseXform) {\n  _inherits(PageMarginsXform, _BaseXform);\n\n  var _super = _createSuper(PageMarginsXform);\n\n  function PageMarginsXform() {\n    _classCallCheck(this, PageMarginsXform);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(PageMarginsXform, [{\n    key: \"render\",\n    value: function render(xmlStream, model) {\n      if (model) {\n        var attributes = {\n          left: model.left,\n          right: model.right,\n          top: model.top,\n          bottom: model.bottom,\n          header: model.header,\n          footer: model.footer\n        };\n\n        if (_.some(attributes, function (value) {\n          return value !== undefined;\n        })) {\n          xmlStream.leafNode(this.tag, attributes);\n        }\n      }\n    }\n  }, {\n    key: \"parseOpen\",\n    value: function parseOpen(node) {\n      switch (node.name) {\n        case this.tag:\n          this.model = {\n            left: parseFloat(node.attributes.left || 0.7),\n            right: parseFloat(node.attributes.right || 0.7),\n            top: parseFloat(node.attributes.top || 0.75),\n            bottom: parseFloat(node.attributes.bottom || 0.75),\n            header: parseFloat(node.attributes.header || 0.3),\n            footer: parseFloat(node.attributes.footer || 0.3)\n          };\n          return true;\n\n        default:\n          return false;\n      }\n    }\n  }, {\n    key: \"parseText\",\n    value: function parseText() {}\n  }, {\n    key: \"parseClose\",\n    value: function parseClose() {\n      return false;\n    }\n  }, {\n    key: \"tag\",\n    get: function get() {\n      return 'pageMargins';\n    }\n  }]);\n\n  return PageMarginsXform;\n}(BaseXform);\n\nmodule.exports = PageMarginsXform;","map":{"version":3,"sources":["../../../../../lib/xlsx/xform/sheet/page-margins-xform.js"],"names":["_","require","BaseXform","PageMarginsXform","xmlStream","model","attributes","left","right","top","bottom","header","footer","value","node","parseFloat","module"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAMA,CAAC,GAAGC,OAAO,CAAjB,2BAAiB,CAAjB;;AACA,IAAMC,SAAS,GAAGD,OAAO,CAAzB,eAAyB,CAAzB;;IAEME,gB;;;;;;;;;;;;;2BAKGC,S,EAAWC,K,EAAO;AACvB,UAAA,KAAA,EAAW;AACT,YAAMC,UAAU,GAAG;AACjBC,UAAAA,IAAI,EAAEF,KAAK,CADM,IAAA;AAEjBG,UAAAA,KAAK,EAAEH,KAAK,CAFK,KAAA;AAGjBI,UAAAA,GAAG,EAAEJ,KAAK,CAHO,GAAA;AAIjBK,UAAAA,MAAM,EAAEL,KAAK,CAJI,MAAA;AAKjBM,UAAAA,MAAM,EAAEN,KAAK,CALI,MAAA;AAMjBO,UAAAA,MAAM,EAAEP,KAAK,CAACO;AANG,SAAnB;;AAQA,YAAI,CAAC,CAAD,IAAA,CAAA,UAAA,EAAmB,UAAA,KAAA,EAAK;AAAA,iBAAIC,KAAK,KAAT,SAAA;AAA5B,SAAI,CAAJ,EAAsD;AACpDT,UAAAA,SAAS,CAATA,QAAAA,CAAmB,KAAnBA,GAAAA,EAAAA,UAAAA;AACD;AACF;AACF;;;8BAESU,I,EAAM;AACd,cAAQA,IAAI,CAAZ,IAAA;AACE,aAAK,KAAL,GAAA;AACE,eAAA,KAAA,GAAa;AACXP,YAAAA,IAAI,EAAEQ,UAAU,CAACD,IAAI,CAAJA,UAAAA,CAAAA,IAAAA,IADN,GACK,CADL;AAEXN,YAAAA,KAAK,EAAEO,UAAU,CAACD,IAAI,CAAJA,UAAAA,CAAAA,KAAAA,IAFP,GAEM,CAFN;AAGXL,YAAAA,GAAG,EAAEM,UAAU,CAACD,IAAI,CAAJA,UAAAA,CAAAA,GAAAA,IAHL,IAGI,CAHJ;AAIXJ,YAAAA,MAAM,EAAEK,UAAU,CAACD,IAAI,CAAJA,UAAAA,CAAAA,MAAAA,IAJR,IAIO,CAJP;AAKXH,YAAAA,MAAM,EAAEI,UAAU,CAACD,IAAI,CAAJA,UAAAA,CAAAA,MAAAA,IALR,GAKO,CALP;AAMXF,YAAAA,MAAM,EAAEG,UAAU,CAACD,IAAI,CAAJA,UAAAA,CAAAA,MAAAA,IAAD,GAAA;AANP,WAAb;AAQA,iBAAA,IAAA;;AACF;AACE,iBAAA,KAAA;AAZJ;AAcD;;;gCAEW,CAAE;;;iCAED;AACX,aAAA,KAAA;AACD;;;wBAzCS;AACR,aAAA,aAAA;AACD;;;;EAH4BZ,S;;AA6C/Bc,MAAM,CAANA,OAAAA,GAAAA,gBAAAA","sourcesContent":["const _ = require('../../../utils/under-dash');\r\nconst BaseXform = require('../base-xform');\r\n\r\nclass PageMarginsXform extends BaseXform {\r\n  get tag() {\r\n    return 'pageMargins';\r\n  }\r\n\r\n  render(xmlStream, model) {\r\n    if (model) {\r\n      const attributes = {\r\n        left: model.left,\r\n        right: model.right,\r\n        top: model.top,\r\n        bottom: model.bottom,\r\n        header: model.header,\r\n        footer: model.footer,\r\n      };\r\n      if (_.some(attributes, value => value !== undefined)) {\r\n        xmlStream.leafNode(this.tag, attributes);\r\n      }\r\n    }\r\n  }\r\n\r\n  parseOpen(node) {\r\n    switch (node.name) {\r\n      case this.tag:\r\n        this.model = {\r\n          left: parseFloat(node.attributes.left || 0.7),\r\n          right: parseFloat(node.attributes.right || 0.7),\r\n          top: parseFloat(node.attributes.top || 0.75),\r\n          bottom: parseFloat(node.attributes.bottom || 0.75),\r\n          header: parseFloat(node.attributes.header || 0.3),\r\n          footer: parseFloat(node.attributes.footer || 0.3),\r\n        };\r\n        return true;\r\n      default:\r\n        return false;\r\n    }\r\n  }\r\n\r\n  parseText() {}\r\n\r\n  parseClose() {\r\n    return false;\r\n  }\r\n}\r\n\r\nmodule.exports = PageMarginsXform;\r\n"]},"metadata":{},"sourceType":"script"}