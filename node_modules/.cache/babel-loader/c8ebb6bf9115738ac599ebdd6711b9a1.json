{"ast":null,"code":"'use strict';\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nvar Worksheet = require('./worksheet');\n\nvar DefinedNames = require('./defined-names');\n\nvar XLSX = require('../xlsx/xlsx');\n\nvar CSV = require('../csv/csv'); // Workbook requirements\n//  Load and Save from file and stream\n//  Access/Add/Delete individual worksheets\n//  Manage String table, Hyperlink table, etc.\n//  Manage scaffolding for contained objects to write to/read from\n\n\nvar Workbook = /*#__PURE__*/function () {\n  function Workbook() {\n    _classCallCheck(this, Workbook);\n\n    this.created = new Date();\n    this.modified = this.created;\n    this.properties = {};\n    this.calcProperties = {};\n    this._worksheets = [];\n    this.views = [];\n    this.media = [];\n    this._definedNames = new DefinedNames();\n  }\n\n  _createClass(Workbook, [{\n    key: \"addWorksheet\",\n    value: function addWorksheet(name, options) {\n      var id = this.nextId;\n\n      if (name && name.length > 31) {\n        // eslint-disable-next-line no-console\n        console.warn(\"Worksheet name \".concat(name, \" exceeds 31 chars. This will be truncated\"));\n      } // Illegal character in worksheet name: asterisk (*), question mark (?),\n      // colon (:), forward slash (/ \\), or bracket ([])\n\n\n      if (/[*?:/\\\\[\\]]/.test(name)) {\n        throw new Error(\"Worksheet name \".concat(name, \" cannot include any of the following characters: * ? : \\\\ / [ ]\"));\n      }\n\n      if (/(^')|('$)/.test(name)) {\n        throw new Error(\"The first or last character of worksheet name cannot be a single quotation mark: \".concat(name));\n      }\n\n      name = (name || \"sheet\".concat(id)).substring(0, 31);\n\n      if (this._worksheets.find(function (ws) {\n        return ws && ws.name.toLowerCase() === name.toLowerCase();\n      })) {\n        throw new Error(\"Worksheet name already exists: \".concat(name));\n      } // if options is a color, call it tabColor (and signal deprecated message)\n\n\n      if (options) {\n        if (typeof options === 'string') {\n          // eslint-disable-next-line no-console\n          console.trace('tabColor argument is now deprecated. Please use workbook.addWorksheet(name, {properties: { tabColor: { argb: \"rbg value\" } }');\n          options = {\n            properties: {\n              tabColor: {\n                argb: options\n              }\n            }\n          };\n        } else if (options.argb || options.theme || options.indexed) {\n          // eslint-disable-next-line no-console\n          console.trace('tabColor argument is now deprecated. Please use workbook.addWorksheet(name, {properties: { tabColor: { ... } }');\n          options = {\n            properties: {\n              tabColor: options\n            }\n          };\n        }\n      }\n\n      var lastOrderNo = this._worksheets.reduce(function (acc, ws) {\n        return (ws && ws.orderNo) > acc ? ws.orderNo : acc;\n      }, 0);\n\n      var worksheetOptions = Object.assign({}, options, {\n        id: id,\n        name: name,\n        orderNo: lastOrderNo + 1,\n        workbook: this\n      });\n      var worksheet = new Worksheet(worksheetOptions);\n      this._worksheets[id] = worksheet;\n      return worksheet;\n    }\n  }, {\n    key: \"removeWorksheetEx\",\n    value: function removeWorksheetEx(worksheet) {\n      delete this._worksheets[worksheet.id];\n    }\n  }, {\n    key: \"removeWorksheet\",\n    value: function removeWorksheet(id) {\n      var worksheet = this.getWorksheet(id);\n\n      if (worksheet) {\n        worksheet.destroy();\n      }\n    }\n  }, {\n    key: \"getWorksheet\",\n    value: function getWorksheet(id) {\n      if (id === undefined) {\n        return this._worksheets.find(Boolean);\n      }\n\n      if (typeof id === 'number') {\n        return this._worksheets[id];\n      }\n\n      if (typeof id === 'string') {\n        return this._worksheets.find(function (worksheet) {\n          return worksheet && worksheet.name === id;\n        });\n      }\n\n      return undefined;\n    }\n  }, {\n    key: \"eachSheet\",\n    value: function eachSheet(iteratee) {\n      this.worksheets.forEach(function (sheet) {\n        iteratee(sheet, sheet.id);\n      });\n    }\n  }, {\n    key: \"clearThemes\",\n    value: function clearThemes() {\n      // Note: themes are not an exposed feature, meddle at your peril!\n      this._themes = undefined;\n    }\n  }, {\n    key: \"addImage\",\n    value: function addImage(image) {\n      // TODO:  validation?\n      var id = this.media.length;\n      this.media.push(Object.assign({}, image, {\n        type: 'image'\n      }));\n      return id;\n    }\n  }, {\n    key: \"getImage\",\n    value: function getImage(id) {\n      return this.media[id];\n    }\n  }, {\n    key: \"xlsx\",\n    get: function get() {\n      if (!this._xlsx) this._xlsx = new XLSX(this);\n      return this._xlsx;\n    }\n  }, {\n    key: \"csv\",\n    get: function get() {\n      if (!this._csv) this._csv = new CSV(this);\n      return this._csv;\n    }\n  }, {\n    key: \"nextId\",\n    get: function get() {\n      // find the next unique spot to add worksheet\n      for (var i = 1; i < this._worksheets.length; i++) {\n        if (!this._worksheets[i]) {\n          return i;\n        }\n      }\n\n      return this._worksheets.length || 1;\n    }\n  }, {\n    key: \"worksheets\",\n    get: function get() {\n      // return a clone of _worksheets\n      return this._worksheets.slice(1).sort(function (a, b) {\n        return a.orderNo - b.orderNo;\n      }).filter(Boolean);\n    }\n  }, {\n    key: \"definedNames\",\n    get: function get() {\n      return this._definedNames;\n    }\n  }, {\n    key: \"model\",\n    get: function get() {\n      return {\n        creator: this.creator || 'Unknown',\n        lastModifiedBy: this.lastModifiedBy || 'Unknown',\n        lastPrinted: this.lastPrinted,\n        created: this.created,\n        modified: this.modified,\n        properties: this.properties,\n        worksheets: this.worksheets.map(function (worksheet) {\n          return worksheet.model;\n        }),\n        sheets: this.worksheets.map(function (ws) {\n          return ws.model;\n        }).filter(Boolean),\n        definedNames: this._definedNames.model,\n        views: this.views,\n        company: this.company,\n        manager: this.manager,\n        title: this.title,\n        subject: this.subject,\n        keywords: this.keywords,\n        category: this.category,\n        description: this.description,\n        language: this.language,\n        revision: this.revision,\n        contentStatus: this.contentStatus,\n        themes: this._themes,\n        media: this.media,\n        calcProperties: this.calcProperties\n      };\n    },\n    set: function set(value) {\n      var _this = this;\n\n      this.creator = value.creator;\n      this.lastModifiedBy = value.lastModifiedBy;\n      this.lastPrinted = value.lastPrinted;\n      this.created = value.created;\n      this.modified = value.modified;\n      this.company = value.company;\n      this.manager = value.manager;\n      this.title = value.title;\n      this.subject = value.subject;\n      this.keywords = value.keywords;\n      this.category = value.category;\n      this.description = value.description;\n      this.language = value.language;\n      this.revision = value.revision;\n      this.contentStatus = value.contentStatus;\n      this.properties = value.properties;\n      this.calcProperties = value.calcProperties;\n      this._worksheets = [];\n      value.worksheets.forEach(function (worksheetModel) {\n        var id = worksheetModel.id,\n            name = worksheetModel.name,\n            state = worksheetModel.state;\n        var orderNo = value.sheets && value.sheets.findIndex(function (ws) {\n          return ws.id === id;\n        });\n        var worksheet = _this._worksheets[id] = new Worksheet({\n          id: id,\n          name: name,\n          orderNo: orderNo,\n          state: state,\n          workbook: _this\n        });\n        worksheet.model = worksheetModel;\n      });\n      this._definedNames.model = value.definedNames;\n      this.views = value.views;\n      this._themes = value.themes;\n      this.media = value.media || [];\n    }\n  }]);\n\n  return Workbook;\n}();\n\nmodule.exports = Workbook;","map":{"version":3,"sources":["../../../lib/doc/workbook.js"],"names":["Worksheet","require","DefinedNames","XLSX","CSV","Workbook","i","name","options","id","console","ws","properties","tabColor","argb","lastOrderNo","worksheetOptions","orderNo","workbook","worksheet","a","b","iteratee","sheet","image","type","creator","lastModifiedBy","lastPrinted","created","modified","worksheets","sheets","definedNames","views","company","manager","title","subject","keywords","category","description","language","revision","contentStatus","themes","media","calcProperties","value","state","worksheetModel","module"],"mappings":"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","sourcesContent":["'use strict';\r\n\r\nconst Worksheet = require('./worksheet');\r\nconst DefinedNames = require('./defined-names');\r\nconst XLSX = require('../xlsx/xlsx');\r\nconst CSV = require('../csv/csv');\r\n\r\n// Workbook requirements\r\n//  Load and Save from file and stream\r\n//  Access/Add/Delete individual worksheets\r\n//  Manage String table, Hyperlink table, etc.\r\n//  Manage scaffolding for contained objects to write to/read from\r\n\r\nclass Workbook {\r\n  constructor() {\r\n    this.created = new Date();\r\n    this.modified = this.created;\r\n    this.properties = {};\r\n    this.calcProperties = {};\r\n    this._worksheets = [];\r\n    this.views = [];\r\n    this.media = [];\r\n    this._definedNames = new DefinedNames();\r\n  }\r\n\r\n  get xlsx() {\r\n    if (!this._xlsx) this._xlsx = new XLSX(this);\r\n    return this._xlsx;\r\n  }\r\n\r\n  get csv() {\r\n    if (!this._csv) this._csv = new CSV(this);\r\n    return this._csv;\r\n  }\r\n\r\n  get nextId() {\r\n    // find the next unique spot to add worksheet\r\n    for (let i = 1; i < this._worksheets.length; i++) {\r\n      if (!this._worksheets[i]) {\r\n        return i;\r\n      }\r\n    }\r\n    return this._worksheets.length || 1;\r\n  }\r\n\r\n  addWorksheet(name, options) {\r\n    const id = this.nextId;\r\n\r\n    if (name && name.length > 31) {\r\n      // eslint-disable-next-line no-console\r\n      console.warn(`Worksheet name ${name} exceeds 31 chars. This will be truncated`);\r\n    }\r\n\r\n    // Illegal character in worksheet name: asterisk (*), question mark (?),\r\n    // colon (:), forward slash (/ \\), or bracket ([])\r\n    if (/[*?:/\\\\[\\]]/.test(name)) {\r\n      throw new Error(\r\n        `Worksheet name ${name} cannot include any of the following characters: * ? : \\\\ / [ ]`\r\n      );\r\n    }\r\n\r\n    if (/(^')|('$)/.test(name)) {\r\n      throw new Error(\r\n        `The first or last character of worksheet name cannot be a single quotation mark: ${name}`\r\n      );\r\n    }\r\n\r\n    name = (name || `sheet${id}`).substring(0, 31);\r\n    if (this._worksheets.find(ws => ws && ws.name.toLowerCase() === name.toLowerCase())) {\r\n      throw new Error(`Worksheet name already exists: ${name}`);\r\n    }\r\n\r\n    // if options is a color, call it tabColor (and signal deprecated message)\r\n    if (options) {\r\n      if (typeof options === 'string') {\r\n        // eslint-disable-next-line no-console\r\n        console.trace(\r\n          'tabColor argument is now deprecated. Please use workbook.addWorksheet(name, {properties: { tabColor: { argb: \"rbg value\" } }'\r\n        );\r\n        options = {\r\n          properties: {\r\n            tabColor: {argb: options},\r\n          },\r\n        };\r\n      } else if (options.argb || options.theme || options.indexed) {\r\n        // eslint-disable-next-line no-console\r\n        console.trace(\r\n          'tabColor argument is now deprecated. Please use workbook.addWorksheet(name, {properties: { tabColor: { ... } }'\r\n        );\r\n        options = {\r\n          properties: {\r\n            tabColor: options,\r\n          },\r\n        };\r\n      }\r\n    }\r\n\r\n    const lastOrderNo = this._worksheets.reduce(\r\n      (acc, ws) => ((ws && ws.orderNo) > acc ? ws.orderNo : acc),\r\n      0\r\n    );\r\n    const worksheetOptions = Object.assign({}, options, {\r\n      id,\r\n      name,\r\n      orderNo: lastOrderNo + 1,\r\n      workbook: this,\r\n    });\r\n\r\n    const worksheet = new Worksheet(worksheetOptions);\r\n\r\n    this._worksheets[id] = worksheet;\r\n    return worksheet;\r\n  }\r\n\r\n  removeWorksheetEx(worksheet) {\r\n    delete this._worksheets[worksheet.id];\r\n  }\r\n\r\n  removeWorksheet(id) {\r\n    const worksheet = this.getWorksheet(id);\r\n    if (worksheet) {\r\n      worksheet.destroy();\r\n    }\r\n  }\r\n\r\n  getWorksheet(id) {\r\n    if (id === undefined) {\r\n      return this._worksheets.find(Boolean);\r\n    }\r\n    if (typeof id === 'number') {\r\n      return this._worksheets[id];\r\n    }\r\n    if (typeof id === 'string') {\r\n      return this._worksheets.find(worksheet => worksheet && worksheet.name === id);\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  get worksheets() {\r\n    // return a clone of _worksheets\r\n    return this._worksheets\r\n      .slice(1)\r\n      .sort((a, b) => a.orderNo - b.orderNo)\r\n      .filter(Boolean);\r\n  }\r\n\r\n  eachSheet(iteratee) {\r\n    this.worksheets.forEach(sheet => {\r\n      iteratee(sheet, sheet.id);\r\n    });\r\n  }\r\n\r\n  get definedNames() {\r\n    return this._definedNames;\r\n  }\r\n\r\n  clearThemes() {\r\n    // Note: themes are not an exposed feature, meddle at your peril!\r\n    this._themes = undefined;\r\n  }\r\n\r\n  addImage(image) {\r\n    // TODO:  validation?\r\n    const id = this.media.length;\r\n    this.media.push(Object.assign({}, image, {type: 'image'}));\r\n    return id;\r\n  }\r\n\r\n  getImage(id) {\r\n    return this.media[id];\r\n  }\r\n\r\n  get model() {\r\n    return {\r\n      creator: this.creator || 'Unknown',\r\n      lastModifiedBy: this.lastModifiedBy || 'Unknown',\r\n      lastPrinted: this.lastPrinted,\r\n      created: this.created,\r\n      modified: this.modified,\r\n      properties: this.properties,\r\n      worksheets: this.worksheets.map(worksheet => worksheet.model),\r\n      sheets: this.worksheets.map(ws => ws.model).filter(Boolean),\r\n      definedNames: this._definedNames.model,\r\n      views: this.views,\r\n      company: this.company,\r\n      manager: this.manager,\r\n      title: this.title,\r\n      subject: this.subject,\r\n      keywords: this.keywords,\r\n      category: this.category,\r\n      description: this.description,\r\n      language: this.language,\r\n      revision: this.revision,\r\n      contentStatus: this.contentStatus,\r\n      themes: this._themes,\r\n      media: this.media,\r\n      calcProperties: this.calcProperties,\r\n    };\r\n  }\r\n\r\n  set model(value) {\r\n    this.creator = value.creator;\r\n    this.lastModifiedBy = value.lastModifiedBy;\r\n    this.lastPrinted = value.lastPrinted;\r\n    this.created = value.created;\r\n    this.modified = value.modified;\r\n    this.company = value.company;\r\n    this.manager = value.manager;\r\n    this.title = value.title;\r\n    this.subject = value.subject;\r\n    this.keywords = value.keywords;\r\n    this.category = value.category;\r\n    this.description = value.description;\r\n    this.language = value.language;\r\n    this.revision = value.revision;\r\n    this.contentStatus = value.contentStatus;\r\n\r\n    this.properties = value.properties;\r\n    this.calcProperties = value.calcProperties;\r\n    this._worksheets = [];\r\n    value.worksheets.forEach(worksheetModel => {\r\n      const {id, name, state} = worksheetModel;\r\n      const orderNo = value.sheets && value.sheets.findIndex(ws => ws.id === id);\r\n      const worksheet = (this._worksheets[id] = new Worksheet({\r\n        id,\r\n        name,\r\n        orderNo,\r\n        state,\r\n        workbook: this,\r\n      }));\r\n\r\n      worksheet.model = worksheetModel;\r\n    });\r\n\r\n    this._definedNames.model = value.definedNames;\r\n    this.views = value.views;\r\n    this._themes = value.themes;\r\n    this.media = value.media || [];\r\n  }\r\n}\r\n\r\nmodule.exports = Workbook;\r\n"]},"metadata":{},"sourceType":"script"}