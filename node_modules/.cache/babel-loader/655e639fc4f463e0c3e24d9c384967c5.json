{"ast":null,"code":"\"use strict\";\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nvar BaseXform = require('../base-xform');\n\nvar VmlAnchorXform = require('./vml-anchor-xform');\n\nvar VmlProtectionXform = require('./style/vml-protection-xform');\n\nvar VmlPositionXform = require('./style/vml-position-xform');\n\nvar POSITION_TYPE = ['twoCells', 'oneCells', 'absolute'];\n\nvar VmlClientDataXform = /*#__PURE__*/function (_BaseXform) {\n  _inherits(VmlClientDataXform, _BaseXform);\n\n  var _super = _createSuper(VmlClientDataXform);\n\n  function VmlClientDataXform() {\n    var _this;\n\n    _classCallCheck(this, VmlClientDataXform);\n\n    _this = _super.call(this);\n    _this.map = {\n      'x:Anchor': new VmlAnchorXform(),\n      'x:Locked': new VmlProtectionXform({\n        tag: 'x:Locked'\n      }),\n      'x:LockText': new VmlProtectionXform({\n        tag: 'x:LockText'\n      }),\n      'x:SizeWithCells': new VmlPositionXform({\n        tag: 'x:SizeWithCells'\n      }),\n      'x:MoveWithCells': new VmlPositionXform({\n        tag: 'x:MoveWithCells'\n      })\n    };\n    return _this;\n  }\n\n  _createClass(VmlClientDataXform, [{\n    key: \"render\",\n    value: function render(xmlStream, model) {\n      var _model$note = model.note,\n          protection = _model$note.protection,\n          editAs = _model$note.editAs;\n      xmlStream.openNode(this.tag, {\n        ObjectType: 'Note'\n      });\n      this.map['x:MoveWithCells'].render(xmlStream, editAs, POSITION_TYPE);\n      this.map['x:SizeWithCells'].render(xmlStream, editAs, POSITION_TYPE);\n      this.map['x:Anchor'].render(xmlStream, model);\n      this.map['x:Locked'].render(xmlStream, protection.locked);\n      xmlStream.leafNode('x:AutoFill', null, 'False');\n      this.map['x:LockText'].render(xmlStream, protection.lockText);\n      xmlStream.leafNode('x:Row', null, model.refAddress.row - 1);\n      xmlStream.leafNode('x:Column', null, model.refAddress.col - 1);\n      xmlStream.closeNode();\n    }\n  }, {\n    key: \"parseOpen\",\n    value: function parseOpen(node) {\n      switch (node.name) {\n        case this.tag:\n          this.reset();\n          this.model = {\n            anchor: [],\n            protection: {},\n            editAs: ''\n          };\n          break;\n\n        default:\n          this.parser = this.map[node.name];\n\n          if (this.parser) {\n            this.parser.parseOpen(node);\n          }\n\n          break;\n      }\n\n      return true;\n    }\n  }, {\n    key: \"parseText\",\n    value: function parseText(text) {\n      if (this.parser) {\n        this.parser.parseText(text);\n      }\n    }\n  }, {\n    key: \"parseClose\",\n    value: function parseClose(name) {\n      if (this.parser) {\n        if (!this.parser.parseClose(name)) {\n          this.parser = undefined;\n        }\n\n        return true;\n      }\n\n      switch (name) {\n        case this.tag:\n          this.normalizeModel();\n          return false;\n\n        default:\n          return true;\n      }\n    }\n  }, {\n    key: \"normalizeModel\",\n    value: function normalizeModel() {\n      var position = Object.assign({}, this.map['x:MoveWithCells'].model, this.map['x:SizeWithCells'].model);\n      var len = Object.keys(position).length;\n      this.model.editAs = POSITION_TYPE[len];\n      this.model.anchor = this.map['x:Anchor'].text;\n      this.model.protection.locked = this.map['x:Locked'].text;\n      this.model.protection.lockText = this.map['x:LockText'].text;\n    }\n  }, {\n    key: \"tag\",\n    get: function get() {\n      return 'x:ClientData';\n    }\n  }]);\n\n  return VmlClientDataXform;\n}(BaseXform);\n\nmodule.exports = VmlClientDataXform;","map":{"version":3,"sources":["../../../../../lib/xlsx/xform/comment/vml-client-data-xform.js"],"names":["BaseXform","require","VmlAnchorXform","VmlProtectionXform","VmlPositionXform","POSITION_TYPE","VmlClientDataXform","tag","xmlStream","model","protection","editAs","ObjectType","node","anchor","text","name","position","Object","len","module"],"mappings":"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","sourcesContent":["const BaseXform = require('../base-xform');\r\n\r\nconst VmlAnchorXform = require('./vml-anchor-xform');\r\nconst VmlProtectionXform = require('./style/vml-protection-xform');\r\nconst VmlPositionXform = require('./style/vml-position-xform');\r\n\r\nconst POSITION_TYPE = ['twoCells', 'oneCells', 'absolute'];\r\n\r\nclass VmlClientDataXform extends BaseXform {\r\n  constructor() {\r\n    super();\r\n    this.map = {\r\n      'x:Anchor': new VmlAnchorXform(),\r\n      'x:Locked': new VmlProtectionXform({tag: 'x:Locked'}),\r\n      'x:LockText': new VmlProtectionXform({tag: 'x:LockText'}),\r\n      'x:SizeWithCells': new VmlPositionXform({tag: 'x:SizeWithCells'}),\r\n      'x:MoveWithCells': new VmlPositionXform({tag: 'x:MoveWithCells'}),\r\n    };\r\n  }\r\n\r\n  get tag() {\r\n    return 'x:ClientData';\r\n  }\r\n\r\n  render(xmlStream, model) {\r\n    const {protection, editAs} = model.note;\r\n    xmlStream.openNode(this.tag, {ObjectType: 'Note'});\r\n    this.map['x:MoveWithCells'].render(xmlStream, editAs, POSITION_TYPE);\r\n    this.map['x:SizeWithCells'].render(xmlStream, editAs, POSITION_TYPE);\r\n    this.map['x:Anchor'].render(xmlStream, model);\r\n    this.map['x:Locked'].render(xmlStream, protection.locked);\r\n    xmlStream.leafNode('x:AutoFill', null, 'False');\r\n    this.map['x:LockText'].render(xmlStream, protection.lockText);\r\n    xmlStream.leafNode('x:Row', null, model.refAddress.row - 1);\r\n    xmlStream.leafNode('x:Column', null, model.refAddress.col - 1);\r\n    xmlStream.closeNode();\r\n  }\r\n\r\n  parseOpen(node) {\r\n    switch (node.name) {\r\n      case this.tag:\r\n        this.reset();\r\n        this.model = {\r\n          anchor: [],\r\n          protection: {},\r\n          editAs: '',\r\n        };\r\n        break;\r\n      default:\r\n        this.parser = this.map[node.name];\r\n        if (this.parser) {\r\n          this.parser.parseOpen(node);\r\n        }\r\n        break;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  parseText(text) {\r\n    if (this.parser) {\r\n      this.parser.parseText(text);\r\n    }\r\n  }\r\n\r\n  parseClose(name) {\r\n    if (this.parser) {\r\n      if (!this.parser.parseClose(name)) {\r\n        this.parser = undefined;\r\n      }\r\n      return true;\r\n    }\r\n    switch (name) {\r\n      case this.tag:\r\n        this.normalizeModel();\r\n        return false;\r\n      default:\r\n        return true;\r\n    }\r\n  }\r\n\r\n  normalizeModel() {\r\n    const position = Object.assign(\r\n      {},\r\n      this.map['x:MoveWithCells'].model,\r\n      this.map['x:SizeWithCells'].model\r\n    );\r\n    const len = Object.keys(position).length;\r\n    this.model.editAs = POSITION_TYPE[len];\r\n    this.model.anchor = this.map['x:Anchor'].text;\r\n    this.model.protection.locked = this.map['x:Locked'].text;\r\n    this.model.protection.lockText = this.map['x:LockText'].text;\r\n  }\r\n}\r\n\r\nmodule.exports = VmlClientDataXform;\r\n"]},"metadata":{},"sourceType":"script"}