{"ast":null,"code":"\"use strict\";\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nvar _ = require('../../../utils/under-dash');\n\nvar BaseXform = require('../base-xform');\n\nfunction booleanToXml(model) {\n  return model ? '1' : undefined;\n}\n\nvar PrintOptionsXform = /*#__PURE__*/function (_BaseXform) {\n  _inherits(PrintOptionsXform, _BaseXform);\n\n  var _super = _createSuper(PrintOptionsXform);\n\n  function PrintOptionsXform() {\n    _classCallCheck(this, PrintOptionsXform);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(PrintOptionsXform, [{\n    key: \"render\",\n    value: function render(xmlStream, model) {\n      if (model) {\n        var attributes = {\n          headings: booleanToXml(model.showRowColHeaders),\n          gridLines: booleanToXml(model.showGridLines),\n          horizontalCentered: booleanToXml(model.horizontalCentered),\n          verticalCentered: booleanToXml(model.verticalCentered)\n        };\n\n        if (_.some(attributes, function (value) {\n          return value !== undefined;\n        })) {\n          xmlStream.leafNode(this.tag, attributes);\n        }\n      }\n    }\n  }, {\n    key: \"parseOpen\",\n    value: function parseOpen(node) {\n      switch (node.name) {\n        case this.tag:\n          this.model = {\n            showRowColHeaders: node.attributes.headings === '1',\n            showGridLines: node.attributes.gridLines === '1',\n            horizontalCentered: node.attributes.horizontalCentered === '1',\n            verticalCentered: node.attributes.verticalCentered === '1'\n          };\n          return true;\n\n        default:\n          return false;\n      }\n    }\n  }, {\n    key: \"parseText\",\n    value: function parseText() {}\n  }, {\n    key: \"parseClose\",\n    value: function parseClose() {\n      return false;\n    }\n  }, {\n    key: \"tag\",\n    get: function get() {\n      return 'printOptions';\n    }\n  }]);\n\n  return PrintOptionsXform;\n}(BaseXform);\n\nmodule.exports = PrintOptionsXform;","map":{"version":3,"sources":["../../../../../lib/xlsx/xform/sheet/print-options-xform.js"],"names":["_","require","BaseXform","model","PrintOptionsXform","xmlStream","attributes","headings","booleanToXml","gridLines","horizontalCentered","verticalCentered","value","node","showRowColHeaders","showGridLines","module"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAMA,CAAC,GAAGC,OAAO,CAAjB,2BAAiB,CAAjB;;AACA,IAAMC,SAAS,GAAGD,OAAO,CAAzB,eAAyB,CAAzB;;AAEA,SAAA,YAAA,CAAA,KAAA,EAA6B;AAC3B,SAAOE,KAAK,GAAA,GAAA,GAAZ,SAAA;AACD;;IAEKC,iB;;;;;;;;;;;;;2BAKGC,S,EAAWF,K,EAAO;AACvB,UAAA,KAAA,EAAW;AACT,YAAMG,UAAU,GAAG;AACjBC,UAAAA,QAAQ,EAAEC,YAAY,CAACL,KAAK,CADX,iBACK,CADL;AAEjBM,UAAAA,SAAS,EAAED,YAAY,CAACL,KAAK,CAFZ,aAEM,CAFN;AAGjBO,UAAAA,kBAAkB,EAAEF,YAAY,CAACL,KAAK,CAHrB,kBAGe,CAHf;AAIjBQ,UAAAA,gBAAgB,EAAEH,YAAY,CAACL,KAAK,CAAN,gBAAA;AAJb,SAAnB;;AAMA,YAAI,CAAC,CAAD,IAAA,CAAA,UAAA,EAAmB,UAAA,KAAA,EAAK;AAAA,iBAAIS,KAAK,KAAT,SAAA;AAA5B,SAAI,CAAJ,EAAsD;AACpDP,UAAAA,SAAS,CAATA,QAAAA,CAAmB,KAAnBA,GAAAA,EAAAA,UAAAA;AACD;AACF;AACF;;;8BAESQ,I,EAAM;AACd,cAAQA,IAAI,CAAZ,IAAA;AACE,aAAK,KAAL,GAAA;AACE,eAAA,KAAA,GAAa;AACXC,YAAAA,iBAAiB,EAAED,IAAI,CAAJA,UAAAA,CAAAA,QAAAA,KADR,GAAA;AAEXE,YAAAA,aAAa,EAAEF,IAAI,CAAJA,UAAAA,CAAAA,SAAAA,KAFJ,GAAA;AAGXH,YAAAA,kBAAkB,EAAEG,IAAI,CAAJA,UAAAA,CAAAA,kBAAAA,KAHT,GAAA;AAIXF,YAAAA,gBAAgB,EAAEE,IAAI,CAAJA,UAAAA,CAAAA,gBAAAA,KAAqC;AAJ5C,WAAb;AAMA,iBAAA,IAAA;;AACF;AACE,iBAAA,KAAA;AAVJ;AAYD;;;gCAEW,CAAE;;;iCAED;AACX,aAAA,KAAA;AACD;;;wBArCS;AACR,aAAA,cAAA;AACD;;;;EAH6BX,S;;AAyChCc,MAAM,CAANA,OAAAA,GAAAA,iBAAAA","sourcesContent":["const _ = require('../../../utils/under-dash');\r\nconst BaseXform = require('../base-xform');\r\n\r\nfunction booleanToXml(model) {\r\n  return model ? '1' : undefined;\r\n}\r\n\r\nclass PrintOptionsXform extends BaseXform {\r\n  get tag() {\r\n    return 'printOptions';\r\n  }\r\n\r\n  render(xmlStream, model) {\r\n    if (model) {\r\n      const attributes = {\r\n        headings: booleanToXml(model.showRowColHeaders),\r\n        gridLines: booleanToXml(model.showGridLines),\r\n        horizontalCentered: booleanToXml(model.horizontalCentered),\r\n        verticalCentered: booleanToXml(model.verticalCentered),\r\n      };\r\n      if (_.some(attributes, value => value !== undefined)) {\r\n        xmlStream.leafNode(this.tag, attributes);\r\n      }\r\n    }\r\n  }\r\n\r\n  parseOpen(node) {\r\n    switch (node.name) {\r\n      case this.tag:\r\n        this.model = {\r\n          showRowColHeaders: node.attributes.headings === '1',\r\n          showGridLines: node.attributes.gridLines === '1',\r\n          horizontalCentered: node.attributes.horizontalCentered === '1',\r\n          verticalCentered: node.attributes.verticalCentered === '1',\r\n        };\r\n        return true;\r\n      default:\r\n        return false;\r\n    }\r\n  }\r\n\r\n  parseText() {}\r\n\r\n  parseClose() {\r\n    return false;\r\n  }\r\n}\r\n\r\nmodule.exports = PrintOptionsXform;\r\n"]},"metadata":{},"sourceType":"script"}