{"ast":null,"code":"\"use strict\";\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nvar BaseXform = require('../base-xform');\n\nvar BaseCellAnchorXform = /*#__PURE__*/function (_BaseXform) {\n  _inherits(BaseCellAnchorXform, _BaseXform);\n\n  var _super = _createSuper(BaseCellAnchorXform);\n\n  function BaseCellAnchorXform() {\n    _classCallCheck(this, BaseCellAnchorXform);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(BaseCellAnchorXform, [{\n    key: \"parseOpen\",\n    value: function parseOpen(node) {\n      if (this.parser) {\n        this.parser.parseOpen(node);\n        return true;\n      }\n\n      switch (node.name) {\n        case this.tag:\n          this.reset();\n          this.model = {\n            range: {\n              editAs: node.attributes.editAs || 'oneCell'\n            }\n          };\n          break;\n\n        default:\n          this.parser = this.map[node.name];\n\n          if (this.parser) {\n            this.parser.parseOpen(node);\n          }\n\n          break;\n      }\n\n      return true;\n    }\n  }, {\n    key: \"parseText\",\n    value: function parseText(text) {\n      if (this.parser) {\n        this.parser.parseText(text);\n      }\n    }\n  }, {\n    key: \"reconcilePicture\",\n    value: function reconcilePicture(model, options) {\n      if (model && model.rId) {\n        var rel = options.rels[model.rId];\n        var match = rel.Target.match(/.*\\/media\\/(.+[.][a-zA-Z]{3,4})/);\n\n        if (match) {\n          var name = match[1];\n          var mediaId = options.mediaIndex[name];\n          return options.media[mediaId];\n        }\n      }\n\n      return undefined;\n    }\n  }]);\n\n  return BaseCellAnchorXform;\n}(BaseXform);\n\nmodule.exports = BaseCellAnchorXform;","map":{"version":3,"sources":["../../../../../lib/xlsx/xform/drawing/base-cell-anchor-xform.js"],"names":["BaseXform","require","BaseCellAnchorXform","node","range","editAs","text","model","options","rel","match","name","mediaId","module"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAMA,SAAS,GAAGC,OAAO,CAAzB,eAAyB,CAAzB;;IAEMC,mB;;;;;;;;;;;;;8BACMC,I,EAAM;AACd,UAAI,KAAJ,MAAA,EAAiB;AACf,aAAA,MAAA,CAAA,SAAA,CAAA,IAAA;AACA,eAAA,IAAA;AACD;;AACD,cAAQA,IAAI,CAAZ,IAAA;AACE,aAAK,KAAL,GAAA;AACE,eAAA,KAAA;AACA,eAAA,KAAA,GAAa;AACXC,YAAAA,KAAK,EAAE;AACLC,cAAAA,MAAM,EAAEF,IAAI,CAAJA,UAAAA,CAAAA,MAAAA,IAA0B;AAD7B;AADI,WAAb;AAKA;;AACF;AACE,eAAA,MAAA,GAAc,KAAA,GAAA,CAASA,IAAI,CAA3B,IAAc,CAAd;;AACA,cAAI,KAAJ,MAAA,EAAiB;AACf,iBAAA,MAAA,CAAA,SAAA,CAAA,IAAA;AACD;;AACD;AAdJ;;AAgBA,aAAA,IAAA;AACD;;;8BAESG,I,EAAM;AACd,UAAI,KAAJ,MAAA,EAAiB;AACf,aAAA,MAAA,CAAA,SAAA,CAAA,IAAA;AACD;AACF;;;qCAEgBC,K,EAAOC,O,EAAS;AAC/B,UAAID,KAAK,IAAIA,KAAK,CAAlB,GAAA,EAAwB;AACtB,YAAME,GAAG,GAAGD,OAAO,CAAPA,IAAAA,CAAaD,KAAK,CAA9B,GAAYC,CAAZ;AACA,YAAME,KAAK,GAAGD,GAAG,CAAHA,MAAAA,CAAAA,KAAAA,CAAd,iCAAcA,CAAd;;AACA,YAAA,KAAA,EAAW;AACT,cAAME,IAAI,GAAGD,KAAK,CAAlB,CAAkB,CAAlB;AACA,cAAME,OAAO,GAAGJ,OAAO,CAAPA,UAAAA,CAAhB,IAAgBA,CAAhB;AACA,iBAAOA,OAAO,CAAPA,KAAAA,CAAP,OAAOA,CAAP;AACD;AACF;;AACD,aAAA,SAAA;AACD;;;;EA1C+BR,S;;AA6ClCa,MAAM,CAANA,OAAAA,GAAAA,mBAAAA","sourcesContent":["const BaseXform = require('../base-xform');\r\n\r\nclass BaseCellAnchorXform extends BaseXform {\r\n  parseOpen(node) {\r\n    if (this.parser) {\r\n      this.parser.parseOpen(node);\r\n      return true;\r\n    }\r\n    switch (node.name) {\r\n      case this.tag:\r\n        this.reset();\r\n        this.model = {\r\n          range: {\r\n            editAs: node.attributes.editAs || 'oneCell',\r\n          },\r\n        };\r\n        break;\r\n      default:\r\n        this.parser = this.map[node.name];\r\n        if (this.parser) {\r\n          this.parser.parseOpen(node);\r\n        }\r\n        break;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  parseText(text) {\r\n    if (this.parser) {\r\n      this.parser.parseText(text);\r\n    }\r\n  }\r\n\r\n  reconcilePicture(model, options) {\r\n    if (model && model.rId) {\r\n      const rel = options.rels[model.rId];\r\n      const match = rel.Target.match(/.*\\/media\\/(.+[.][a-zA-Z]{3,4})/);\r\n      if (match) {\r\n        const name = match[1];\r\n        const mediaId = options.mediaIndex[name];\r\n        return options.media[mediaId];\r\n      }\r\n    }\r\n    return undefined;\r\n  }\r\n}\r\n\r\nmodule.exports = BaseCellAnchorXform;\r\n"]},"metadata":{},"sourceType":"script"}