{"ast":null,"code":"\"use strict\";\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nvar CompositeXform = require('../../composite-xform');\n\nvar ColorXform = require('../../style/color-xform');\n\nvar CfvoXform = require('./cfvo-xform');\n\nvar ColorScaleXform = /*#__PURE__*/function (_CompositeXform) {\n  _inherits(ColorScaleXform, _CompositeXform);\n\n  var _super = _createSuper(ColorScaleXform);\n\n  function ColorScaleXform() {\n    var _this;\n\n    _classCallCheck(this, ColorScaleXform);\n\n    _this = _super.call(this);\n    _this.map = {\n      cfvo: _this.cfvoXform = new CfvoXform(),\n      color: _this.colorXform = new ColorXform()\n    };\n    return _this;\n  }\n\n  _createClass(ColorScaleXform, [{\n    key: \"render\",\n    value: function render(xmlStream, model) {\n      var _this2 = this;\n\n      xmlStream.openNode(this.tag);\n      model.cfvo.forEach(function (cfvo) {\n        _this2.cfvoXform.render(xmlStream, cfvo);\n      });\n      model.color.forEach(function (color) {\n        _this2.colorXform.render(xmlStream, color);\n      });\n      xmlStream.closeNode();\n    }\n  }, {\n    key: \"createNewModel\",\n    value: function createNewModel(node) {\n      return {\n        cfvo: [],\n        color: []\n      };\n    }\n  }, {\n    key: \"onParserClose\",\n    value: function onParserClose(name, parser) {\n      this.model[name].push(parser.model);\n    }\n  }, {\n    key: \"tag\",\n    get: function get() {\n      return 'colorScale';\n    }\n  }]);\n\n  return ColorScaleXform;\n}(CompositeXform);\n\nmodule.exports = ColorScaleXform;","map":{"version":3,"sources":["../../../../../../lib/xlsx/xform/sheet/cf/color-scale-xform.js"],"names":["CompositeXform","require","ColorXform","CfvoXform","ColorScaleXform","cfvo","color","xmlStream","model","node","name","parser","module"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAMA,cAAc,GAAGC,OAAO,CAA9B,uBAA8B,CAA9B;;AAEA,IAAMC,UAAU,GAAGD,OAAO,CAA1B,yBAA0B,CAA1B;;AACA,IAAME,SAAS,GAAGF,OAAO,CAAzB,cAAyB,CAAzB;;IAEMG,e;;;;;AACJ,WAAA,eAAA,GAAc;AAAA,QAAA,KAAA;;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,eAAA,CAAA;;AACZ,IAAA,KAAA,GAAA,MAAA,CAAA,IAAA,CAAA,IAAA,CAAA;AAEA,IAAA,KAAA,CAAA,GAAA,GAAW;AACTC,MAAAA,IAAI,EAAG,KAAA,CAAA,SAAA,GAAiB,IADf,SACe,EADf;AAETC,MAAAA,KAAK,EAAG,KAAA,CAAA,UAAA,GAAkB,IAAA,UAAA;AAFjB,KAAX;AAHY,WAAA,KAAA;AAOb;;;;2BAMMC,S,EAAWC,K,EAAO;AAAA,UAAA,MAAA,GAAA,IAAA;;AACvBD,MAAAA,SAAS,CAATA,QAAAA,CAAmB,KAAnBA,GAAAA;AAEAC,MAAAA,KAAK,CAALA,IAAAA,CAAAA,OAAAA,CAAmB,UAAA,IAAA,EAAQ;AACzB,QAAA,MAAI,CAAJ,SAAA,CAAA,MAAA,CAAA,SAAA,EAAA,IAAA;AADFA,OAAAA;AAGAA,MAAAA,KAAK,CAALA,KAAAA,CAAAA,OAAAA,CAAoB,UAAA,KAAA,EAAS;AAC3B,QAAA,MAAI,CAAJ,UAAA,CAAA,MAAA,CAAA,SAAA,EAAA,KAAA;AADFA,OAAAA;AAIAD,MAAAA,SAAS,CAATA,SAAAA;AACD;;;mCAEcE,I,EAAM;AACnB,aAAO;AACLJ,QAAAA,IAAI,EADC,EAAA;AAELC,QAAAA,KAAK,EAAE;AAFF,OAAP;AAID;;;kCAEaI,I,EAAMC,M,EAAQ;AAC1B,WAAA,KAAA,CAAA,IAAA,EAAA,IAAA,CAAsBA,MAAM,CAA5B,KAAA;AACD;;;wBA1BS;AACR,aAAA,YAAA;AACD;;;;EAZ2BX,c;;AAuC9BY,MAAM,CAANA,OAAAA,GAAAA,eAAAA","sourcesContent":["const CompositeXform = require('../../composite-xform');\r\n\r\nconst ColorXform = require('../../style/color-xform');\r\nconst CfvoXform = require('./cfvo-xform');\r\n\r\nclass ColorScaleXform extends CompositeXform {\r\n  constructor() {\r\n    super();\r\n\r\n    this.map = {\r\n      cfvo: (this.cfvoXform = new CfvoXform()),\r\n      color: (this.colorXform = new ColorXform()),\r\n    };\r\n  }\r\n\r\n  get tag() {\r\n    return 'colorScale';\r\n  }\r\n\r\n  render(xmlStream, model) {\r\n    xmlStream.openNode(this.tag);\r\n\r\n    model.cfvo.forEach(cfvo => {\r\n      this.cfvoXform.render(xmlStream, cfvo);\r\n    });\r\n    model.color.forEach(color => {\r\n      this.colorXform.render(xmlStream, color);\r\n    });\r\n\r\n    xmlStream.closeNode();\r\n  }\r\n\r\n  createNewModel(node) {\r\n    return {\r\n      cfvo: [],\r\n      color: [],\r\n    };\r\n  }\r\n\r\n  onParserClose(name, parser) {\r\n    this.model[name].push(parser.model);\r\n  }\r\n}\r\n\r\nmodule.exports = ColorScaleXform;\r\n"]},"metadata":{},"sourceType":"script"}