{"ast":null,"code":"\"use strict\"; // eslint-disable-next-line node/no-unsupported-features/node-builtins\n\nvar textDecoder = typeof TextDecoder === 'undefined' ? null : new TextDecoder('utf-8');\n\nfunction bufferToString(chunk) {\n  if (typeof chunk === 'string') {\n    return chunk;\n  }\n\n  if (textDecoder) {\n    return textDecoder.decode(chunk);\n  }\n\n  return chunk.toString();\n}\n\nexports.bufferToString = bufferToString;","map":{"version":3,"sources":["../../../lib/utils/browser-buffer-decode.js"],"names":["textDecoder","chunk","exports"],"mappings":"cAAA;;AACA,IAAMA,WAAW,GAAG,OAAA,WAAA,KAAA,WAAA,GAAA,IAAA,GAA4C,IAAA,WAAA,CAAhE,OAAgE,CAAhE;;AAEA,SAAA,cAAA,CAAA,KAAA,EAA+B;AAC7B,MAAI,OAAA,KAAA,KAAJ,QAAA,EAA+B;AAC7B,WAAA,KAAA;AACD;;AACD,MAAA,WAAA,EAAiB;AACf,WAAOA,WAAW,CAAXA,MAAAA,CAAP,KAAOA,CAAP;AACD;;AACD,SAAOC,KAAK,CAAZ,QAAOA,EAAP;AACD;;AAEDC,OAAO,CAAPA,cAAAA,GAAAA,cAAAA","sourcesContent":["// eslint-disable-next-line node/no-unsupported-features/node-builtins\r\nconst textDecoder = typeof TextDecoder === 'undefined' ? null : new TextDecoder('utf-8');\r\n\r\nfunction bufferToString(chunk) {\r\n  if (typeof chunk === 'string') {\r\n    return chunk;\r\n  }\r\n  if (textDecoder) {\r\n    return textDecoder.decode(chunk);\r\n  }\r\n  return chunk.toString();\r\n}\r\n\r\nexports.bufferToString = bufferToString;\r\n"]},"metadata":{},"sourceType":"script"}