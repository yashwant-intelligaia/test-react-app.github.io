{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/yashwant-intelligaia/Documents/Official/TestTasks/my-react-app/src/App.js\";\nimport './App.css';\nimport ExcelJS from \"exceljs/dist/es5/exceljs.browser\"; // worksheet.mergeCells(\"A2:I2\");\n// const customCell = worksheet.getCell(\"A2\");\n// customCell.font = {\n//   name: \"Comic Sans MS\",\n//   family: 4,\n//   size: 20,\n//   underline: true,\n//   bold: true\n// };\n// customCell.value = \"Custom header here\";\n// var headerRow = worksheet.addRow();\n// worksheet.getRow(4).font = { bold: true };\n// for (let i = 0; i < columns.length; i++) {\n//   let currentColumnWidth = DataGrid.option().columns[i].width;\n//   worksheet.getColumn(i + 1).width =\n//     currentColumnWidth !== undefined ? currentColumnWidth / 6 : 20;\n//   let cell = headerRow.getCell(i + 1);\n//   cell.value = columns[i].caption;\n// }\n// if (this.state.excelFilterEnabled === true) {\n//   worksheet.autoFilter = {\n//     from: {\n//       row: 3,\n//       column: 1\n//     },\n//     to: {\n//       row: 3,\n//       column: columns.length\n//     }\n//   };\n// }\n// // eslint-disable-next-line no-unused-expressions\n// this.state.excelFilterEnabled === true\n//   ? (worksheet.views = [{ state: \"frozen\", ySplit: 3 }])\n//   : undefined;\n// worksheet.properties.outlineProperties = {\n//   summaryBelow: false,\n//   summaryRight: false\n// };\n// DataGrid.getController(\"data\")\n//   .loadAll()\n//   .then(function (allItems) {\n//     for (let i = 0; i < allItems.length; i++) {\n//       var dataRow = worksheet.addRow();\n//       if (allItems[i].rowType === \"data\") {\n//         dataRow.outlineLevel = 1;\n//       }\n//       for (let j = 0; j < allItems[i].values.length; j++) {\n//         let cell = dataRow.getCell(j + 1);\n//         cell.value = allItems[i].values[j];\n//       }\n//     }\n//     const rowCount = worksheet.rowCount;\n//     worksheet.mergeCells(`A${rowCount}:I${rowCount + 1}`);\n//     worksheet.getRow(1).font = { bold: true };\n//     worksheet.getCell(`A${rowCount}`).font = {\n//       name: \"Comic Sans MS\",\n//       family: 4,\n//       size: 20,\n//       underline: true,\n//       bold: true\n//     };\n//     worksheet.getCell(`A${rowCount}`).value = \"Custom Footer here\";\n//     ExcelJSWorkbook.xlsx.writeBuffer().then(function (buffer) {\n//       saveAs(\n//         new Blob([buffer], { type: \"application/octet-stream\" }),\n//         `${DataGrid.option().export.fileName}.xlsx`\n//       );\n//     });\n//   });\n\nfunction App() {\n  const exportExcel = event => {\n    var ExcelJSWorkbook = new ExcelJS.Workbook();\n    var worksheet = ExcelJSWorkbook.addWorksheet(\"ExcelJS sheet\");\n    worksheet.columns = [{\n      header: 'Id',\n      key: 'id',\n      width: 10\n    }, {\n      header: 'Name',\n      key: 'name',\n      width: 32\n    }, {\n      header: 'D.O.B.',\n      key: 'DOB',\n      width: 10,\n      outlineLevel: 1\n    }];\n    worksheet.addRow({\n      id: 1,\n      name: 'John Doe',\n      dob: new Date(1970, 1, 1)\n    });\n    worksheet.addRow({\n      id: 2,\n      name: 'Jane Doe',\n      dob: new Date(1965, 1, 7)\n    });\n    ExcelJSWorkbook.xlsx.writeBuffer().then(function (buffer) {\n      saveAs(new Blob([buffer], {\n        type: \"application/octet-stream\"\n      }), `Sample.xlsx`);\n    }); // var columns = DataGrid.getVisibleColumns();\n\n    console.log('export excel', worksheet);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: exportExcel,\n      children: \"Export\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/yashwant-intelligaia/Documents/Official/TestTasks/my-react-app/src/App.js"],"names":["ExcelJS","App","exportExcel","event","ExcelJSWorkbook","Workbook","worksheet","addWorksheet","columns","header","key","width","outlineLevel","addRow","id","name","dob","Date","xlsx","writeBuffer","then","buffer","saveAs","Blob","type","console","log"],"mappings":";;AAAA,OAAO,WAAP;AACA,OAAOA,OAAP,MAAoB,kCAApB,C,CAEE;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEF,SAASC,GAAT,GAAe;AACb,QAAMC,WAAW,GAAGC,KAAK,IAAI;AAC3B,QAAIC,eAAe,GAAG,IAAIJ,OAAO,CAACK,QAAZ,EAAtB;AACA,QAAIC,SAAS,GAAGF,eAAe,CAACG,YAAhB,CAA6B,eAA7B,CAAhB;AACAD,IAAAA,SAAS,CAACE,OAAV,GAAoB,CAClB;AAAEC,MAAAA,MAAM,EAAE,IAAV;AAAgBC,MAAAA,GAAG,EAAE,IAArB;AAA2BC,MAAAA,KAAK,EAAE;AAAlC,KADkB,EAElB;AAAEF,MAAAA,MAAM,EAAE,MAAV;AAAkBC,MAAAA,GAAG,EAAE,MAAvB;AAA+BC,MAAAA,KAAK,EAAE;AAAtC,KAFkB,EAGlB;AAAEF,MAAAA,MAAM,EAAE,QAAV;AAAoBC,MAAAA,GAAG,EAAE,KAAzB;AAAgCC,MAAAA,KAAK,EAAE,EAAvC;AAA2CC,MAAAA,YAAY,EAAE;AAAzD,KAHkB,CAApB;AAKAN,IAAAA,SAAS,CAACO,MAAV,CAAiB;AAACC,MAAAA,EAAE,EAAE,CAAL;AAAQC,MAAAA,IAAI,EAAE,UAAd;AAA0BC,MAAAA,GAAG,EAAE,IAAIC,IAAJ,CAAS,IAAT,EAAc,CAAd,EAAgB,CAAhB;AAA/B,KAAjB;AACAX,IAAAA,SAAS,CAACO,MAAV,CAAiB;AAACC,MAAAA,EAAE,EAAE,CAAL;AAAQC,MAAAA,IAAI,EAAE,UAAd;AAA0BC,MAAAA,GAAG,EAAE,IAAIC,IAAJ,CAAS,IAAT,EAAc,CAAd,EAAgB,CAAhB;AAA/B,KAAjB;AACAb,IAAAA,eAAe,CAACc,IAAhB,CAAqBC,WAArB,GAAmCC,IAAnC,CAAwC,UAASC,MAAT,EAAiB;AACvDC,MAAAA,MAAM,CACJ,IAAIC,IAAJ,CAAS,CAACF,MAAD,CAAT,EAAmB;AAAEG,QAAAA,IAAI,EAAE;AAAR,OAAnB,CADI,EAEH,aAFG,CAAN;AAID,KALD,EAV2B,CAgB3B;;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BpB,SAA5B;AACD,GAlBD;;AAmBA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE;AAAQ,MAAA,OAAO,EAAEJ,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;KAzBQD,G;AA2BT,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport ExcelJS from \"exceljs/dist/es5/exceljs.browser\";\n\n  // worksheet.mergeCells(\"A2:I2\");\n\n  // const customCell = worksheet.getCell(\"A2\");\n  // customCell.font = {\n  //   name: \"Comic Sans MS\",\n  //   family: 4,\n  //   size: 20,\n  //   underline: true,\n  //   bold: true\n  // };\n\n  // customCell.value = \"Custom header here\";\n\n  // var headerRow = worksheet.addRow();\n  // worksheet.getRow(4).font = { bold: true };\n\n  // for (let i = 0; i < columns.length; i++) {\n  //   let currentColumnWidth = DataGrid.option().columns[i].width;\n  //   worksheet.getColumn(i + 1).width =\n  //     currentColumnWidth !== undefined ? currentColumnWidth / 6 : 20;\n  //   let cell = headerRow.getCell(i + 1);\n  //   cell.value = columns[i].caption;\n  // }\n\n  // if (this.state.excelFilterEnabled === true) {\n  //   worksheet.autoFilter = {\n  //     from: {\n  //       row: 3,\n  //       column: 1\n  //     },\n  //     to: {\n  //       row: 3,\n  //       column: columns.length\n  //     }\n  //   };\n  // }\n\n  // // eslint-disable-next-line no-unused-expressions\n  // this.state.excelFilterEnabled === true\n  //   ? (worksheet.views = [{ state: \"frozen\", ySplit: 3 }])\n  //   : undefined;\n\n  // worksheet.properties.outlineProperties = {\n  //   summaryBelow: false,\n  //   summaryRight: false\n  // };\n\n  // DataGrid.getController(\"data\")\n  //   .loadAll()\n  //   .then(function (allItems) {\n  //     for (let i = 0; i < allItems.length; i++) {\n  //       var dataRow = worksheet.addRow();\n  //       if (allItems[i].rowType === \"data\") {\n  //         dataRow.outlineLevel = 1;\n  //       }\n  //       for (let j = 0; j < allItems[i].values.length; j++) {\n  //         let cell = dataRow.getCell(j + 1);\n  //         cell.value = allItems[i].values[j];\n  //       }\n  //     }\n\n  //     const rowCount = worksheet.rowCount;\n  //     worksheet.mergeCells(`A${rowCount}:I${rowCount + 1}`);\n  //     worksheet.getRow(1).font = { bold: true };\n  //     worksheet.getCell(`A${rowCount}`).font = {\n  //       name: \"Comic Sans MS\",\n  //       family: 4,\n  //       size: 20,\n  //       underline: true,\n  //       bold: true\n  //     };\n\n  //     worksheet.getCell(`A${rowCount}`).value = \"Custom Footer here\";\n\n  //     ExcelJSWorkbook.xlsx.writeBuffer().then(function (buffer) {\n  //       saveAs(\n  //         new Blob([buffer], { type: \"application/octet-stream\" }),\n  //         `${DataGrid.option().export.fileName}.xlsx`\n  //       );\n  //     });\n  //   });\n\nfunction App() {\n  const exportExcel = event => {\n    var ExcelJSWorkbook = new ExcelJS.Workbook();\n    var worksheet = ExcelJSWorkbook.addWorksheet(\"ExcelJS sheet\");\n    worksheet.columns = [\n      { header: 'Id', key: 'id', width: 10 },\n      { header: 'Name', key: 'name', width: 32 },\n      { header: 'D.O.B.', key: 'DOB', width: 10, outlineLevel: 1 }\n    ];\n    worksheet.addRow({id: 1, name: 'John Doe', dob: new Date(1970,1,1)});\n    worksheet.addRow({id: 2, name: 'Jane Doe', dob: new Date(1965,1,7)});\n    ExcelJSWorkbook.xlsx.writeBuffer().then(function(buffer) {\n      saveAs(\n        new Blob([buffer], { type: \"application/octet-stream\" }),\n        `Sample.xlsx`\n      );\n    });\n    // var columns = DataGrid.getVisibleColumns();\n    console.log('export excel', worksheet);\n  }\n  return (\n    <div className=\"App\">\n      <button onClick={exportExcel}>Export</button>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}