{"ast":null,"code":"\"use strict\";\n\nvar colCache = require('./col-cache'); // const cellRefRegex = /(([a-z_\\-0-9]*)!)?[$]?([a-z]+)[$]?([1-9][0-9]*)/i;\n\n\nvar replacementCandidateRx = /(([a-z_\\-0-9]*)!)?([a-z0-9_$]{2,})([(])?/gi;\nvar CRrx = /^([$])?([a-z]+)([$])?([1-9][0-9]*)$/i;\n\nfunction slideFormula(formula, fromCell, toCell) {\n  var offset = colCache.decode(fromCell);\n  var to = colCache.decode(toCell);\n  return formula.replace(replacementCandidateRx, function (refMatch, sheet, sheetMaybe, addrPart, trailingParen) {\n    if (trailingParen) {\n      return refMatch;\n    }\n\n    var match = CRrx.exec(addrPart);\n\n    if (match) {\n      var colDollar = match[1];\n      var colStr = match[2].toUpperCase();\n      var rowDollar = match[3];\n      var rowStr = match[4];\n\n      if (colStr.length > 3 || colStr.length === 3 && colStr > 'XFD') {\n        // > XFD is the highest col number in excel 2007 and beyond, so this is a named range\n        return refMatch;\n      }\n\n      var col = colCache.l2n(colStr);\n      var row = parseInt(rowStr, 10);\n\n      if (!colDollar) {\n        col += to.col - offset.col;\n      }\n\n      if (!rowDollar) {\n        row += to.row - offset.row;\n      }\n\n      var res = (sheet || '') + (colDollar || '') + colCache.n2l(col) + (rowDollar || '') + row;\n      return res;\n    }\n\n    return refMatch;\n  });\n}\n\nmodule.exports = {\n  slideFormula: slideFormula\n};","map":{"version":3,"sources":["../../../lib/utils/shared-formula.js"],"names":["colCache","require","replacementCandidateRx","CRrx","offset","to","match","colDollar","colStr","rowDollar","rowStr","col","row","parseInt","res","sheet","module","slideFormula"],"mappings":";;AAAA,IAAMA,QAAQ,GAAGC,OAAO,CAAxB,aAAwB,CAAxB,C,CAEA;;;AACA,IAAMC,sBAAsB,GAA5B,4CAAA;AACA,IAAMC,IAAI,GAAV,sCAAA;;AAEA,SAAA,YAAA,CAAA,OAAA,EAAA,QAAA,EAAA,MAAA,EAAiD;AAC/C,MAAMC,MAAM,GAAGJ,QAAQ,CAARA,MAAAA,CAAf,QAAeA,CAAf;AACA,MAAMK,EAAE,GAAGL,QAAQ,CAARA,MAAAA,CAAX,MAAWA,CAAX;AACA,SAAO,OAAO,CAAP,OAAA,CAAA,sBAAA,EAEL,UAAA,QAAA,EAAA,KAAA,EAAA,UAAA,EAAA,QAAA,EAAA,aAAA,EAA0D;AACxD,QAAA,aAAA,EAAmB;AACjB,aAAA,QAAA;AACD;;AACD,QAAMM,KAAK,GAAGH,IAAI,CAAJA,IAAAA,CAAd,QAAcA,CAAd;;AACA,QAAA,KAAA,EAAW;AACT,UAAMI,SAAS,GAAGD,KAAK,CAAvB,CAAuB,CAAvB;AACA,UAAME,MAAM,GAAGF,KAAK,CAALA,CAAK,CAALA,CAAf,WAAeA,EAAf;AACA,UAAMG,SAAS,GAAGH,KAAK,CAAvB,CAAuB,CAAvB;AACA,UAAMI,MAAM,GAAGJ,KAAK,CAApB,CAAoB,CAApB;;AACA,UAAIE,MAAM,CAANA,MAAAA,GAAAA,CAAAA,IAAsBA,MAAM,CAANA,MAAAA,KAAAA,CAAAA,IAAuBA,MAAM,GAAvD,KAAA,EAAkE;AAChE;AACA,eAAA,QAAA;AACD;;AACD,UAAIG,GAAG,GAAGX,QAAQ,CAARA,GAAAA,CAAV,MAAUA,CAAV;AACA,UAAIY,GAAG,GAAGC,QAAQ,CAAA,MAAA,EAAlB,EAAkB,CAAlB;;AACA,UAAI,CAAJ,SAAA,EAAgB;AACdF,QAAAA,GAAG,IAAIN,EAAE,CAAFA,GAAAA,GAASD,MAAM,CAAtBO,GAAAA;AACD;;AACD,UAAI,CAAJ,SAAA,EAAgB;AACdC,QAAAA,GAAG,IAAIP,EAAE,CAAFA,GAAAA,GAASD,MAAM,CAAtBQ,GAAAA;AACD;;AACD,UAAME,GAAG,GAAG,CAACC,KAAK,IAAN,EAAA,KAAiBR,SAAS,IAA1B,EAAA,IAAoCP,QAAQ,CAARA,GAAAA,CAApC,GAAoCA,CAApC,IAAyDS,SAAS,IAAlE,EAAA,IAAZ,GAAA;AACA,aAAA,GAAA;AACD;;AACD,WAAA,QAAA;AA3BJ,GAAO,CAAP;AA8BD;;AAEDO,MAAM,CAANA,OAAAA,GAAiB;AACfC,EAAAA,YAAY,EAAZA;AADe,CAAjBD","sourcesContent":["const colCache = require('./col-cache');\r\n\r\n// const cellRefRegex = /(([a-z_\\-0-9]*)!)?[$]?([a-z]+)[$]?([1-9][0-9]*)/i;\r\nconst replacementCandidateRx = /(([a-z_\\-0-9]*)!)?([a-z0-9_$]{2,})([(])?/gi;\r\nconst CRrx = /^([$])?([a-z]+)([$])?([1-9][0-9]*)$/i;\r\n\r\nfunction slideFormula(formula, fromCell, toCell) {\r\n  const offset = colCache.decode(fromCell);\r\n  const to = colCache.decode(toCell);\r\n  return formula.replace(\r\n    replacementCandidateRx,\r\n    (refMatch, sheet, sheetMaybe, addrPart, trailingParen) => {\r\n      if (trailingParen) {\r\n        return refMatch;\r\n      }\r\n      const match = CRrx.exec(addrPart);\r\n      if (match) {\r\n        const colDollar = match[1];\r\n        const colStr = match[2].toUpperCase();\r\n        const rowDollar = match[3];\r\n        const rowStr = match[4];\r\n        if (colStr.length > 3 || (colStr.length === 3 && colStr > 'XFD')) {\r\n          // > XFD is the highest col number in excel 2007 and beyond, so this is a named range\r\n          return refMatch;\r\n        }\r\n        let col = colCache.l2n(colStr);\r\n        let row = parseInt(rowStr, 10);\r\n        if (!colDollar) {\r\n          col += to.col - offset.col;\r\n        }\r\n        if (!rowDollar) {\r\n          row += to.row - offset.row;\r\n        }\r\n        const res = (sheet || '') + (colDollar || '') + colCache.n2l(col) + (rowDollar || '') + row;\r\n        return res;\r\n      }\r\n      return refMatch;\r\n    }\r\n  );\r\n}\r\n\r\nmodule.exports = {\r\n  slideFormula,\r\n};\r\n"]},"metadata":{},"sourceType":"script"}