{"ast":null,"code":"\"use strict\";\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nvar _ = require('../../../utils/under-dash');\n\nvar BaseXform = require('../base-xform');\n\nvar SheetFormatPropertiesXform = /*#__PURE__*/function (_BaseXform) {\n  _inherits(SheetFormatPropertiesXform, _BaseXform);\n\n  var _super = _createSuper(SheetFormatPropertiesXform);\n\n  function SheetFormatPropertiesXform() {\n    _classCallCheck(this, SheetFormatPropertiesXform);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(SheetFormatPropertiesXform, [{\n    key: \"render\",\n    value: function render(xmlStream, model) {\n      if (model) {\n        var attributes = {\n          defaultRowHeight: model.defaultRowHeight,\n          outlineLevelRow: model.outlineLevelRow,\n          outlineLevelCol: model.outlineLevelCol,\n          'x14ac:dyDescent': model.dyDescent\n        };\n\n        if (model.defaultColWidth) {\n          attributes.defaultColWidth = model.defaultColWidth;\n        } // default value for 'defaultRowHeight' is 15, this should not be 'custom'\n\n\n        if (!model.defaultRowHeight || model.defaultRowHeight !== 15) {\n          attributes.customHeight = '1';\n        }\n\n        if (_.some(attributes, function (value) {\n          return value !== undefined;\n        })) {\n          xmlStream.leafNode('sheetFormatPr', attributes);\n        }\n      }\n    }\n  }, {\n    key: \"parseOpen\",\n    value: function parseOpen(node) {\n      if (node.name === 'sheetFormatPr') {\n        this.model = {\n          defaultRowHeight: parseFloat(node.attributes.defaultRowHeight || '0'),\n          dyDescent: parseFloat(node.attributes['x14ac:dyDescent'] || '0'),\n          outlineLevelRow: parseInt(node.attributes.outlineLevelRow || '0', 10),\n          outlineLevelCol: parseInt(node.attributes.outlineLevelCol || '0', 10)\n        };\n\n        if (node.attributes.defaultColWidth) {\n          this.model.defaultColWidth = parseFloat(node.attributes.defaultColWidth);\n        }\n\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"parseText\",\n    value: function parseText() {}\n  }, {\n    key: \"parseClose\",\n    value: function parseClose() {\n      return false;\n    }\n  }, {\n    key: \"tag\",\n    get: function get() {\n      return 'sheetFormatPr';\n    }\n  }]);\n\n  return SheetFormatPropertiesXform;\n}(BaseXform);\n\nmodule.exports = SheetFormatPropertiesXform;","map":{"version":3,"sources":["../../../../../lib/xlsx/xform/sheet/sheet-format-properties-xform.js"],"names":["_","require","BaseXform","SheetFormatPropertiesXform","xmlStream","model","attributes","defaultRowHeight","outlineLevelRow","outlineLevelCol","dyDescent","value","node","parseFloat","parseInt","module"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAMA,CAAC,GAAGC,OAAO,CAAjB,2BAAiB,CAAjB;;AACA,IAAMC,SAAS,GAAGD,OAAO,CAAzB,eAAyB,CAAzB;;IAEME,0B;;;;;;;;;;;;;2BAKGC,S,EAAWC,K,EAAO;AACvB,UAAA,KAAA,EAAW;AACT,YAAMC,UAAU,GAAG;AACjBC,UAAAA,gBAAgB,EAAEF,KAAK,CADN,gBAAA;AAEjBG,UAAAA,eAAe,EAAEH,KAAK,CAFL,eAAA;AAGjBI,UAAAA,eAAe,EAAEJ,KAAK,CAHL,eAAA;AAIjB,6BAAmBA,KAAK,CAACK;AAJR,SAAnB;;AAMA,YAAIL,KAAK,CAAT,eAAA,EAA2B;AACzBC,UAAAA,UAAU,CAAVA,eAAAA,GAA6BD,KAAK,CAAlCC,eAAAA;AARO,SAAA,CAWT;;;AACA,YAAI,CAACD,KAAK,CAAN,gBAAA,IAA2BA,KAAK,CAALA,gBAAAA,KAA/B,EAAA,EAA8D;AAC5DC,UAAAA,UAAU,CAAVA,YAAAA,GAAAA,GAAAA;AACD;;AAED,YAAI,CAAC,CAAD,IAAA,CAAA,UAAA,EAAmB,UAAA,KAAA,EAAK;AAAA,iBAAIK,KAAK,KAAT,SAAA;AAA5B,SAAI,CAAJ,EAAsD;AACpDP,UAAAA,SAAS,CAATA,QAAAA,CAAAA,eAAAA,EAAAA,UAAAA;AACD;AACF;AACF;;;8BAESQ,I,EAAM;AACd,UAAIA,IAAI,CAAJA,IAAAA,KAAJ,eAAA,EAAmC;AACjC,aAAA,KAAA,GAAa;AACXL,UAAAA,gBAAgB,EAAEM,UAAU,CAACD,IAAI,CAAJA,UAAAA,CAAAA,gBAAAA,IADlB,GACiB,CADjB;AAEXF,UAAAA,SAAS,EAAEG,UAAU,CAACD,IAAI,CAAJA,UAAAA,CAAAA,iBAAAA,KAFX,GAEU,CAFV;AAGXJ,UAAAA,eAAe,EAAEM,QAAQ,CAACF,IAAI,CAAJA,UAAAA,CAAAA,eAAAA,IAAD,GAAA,EAHd,EAGc,CAHd;AAIXH,UAAAA,eAAe,EAAEK,QAAQ,CAACF,IAAI,CAAJA,UAAAA,CAAAA,eAAAA,IAAD,GAAA,EAAA,EAAA;AAJd,SAAb;;AAMA,YAAIA,IAAI,CAAJA,UAAAA,CAAJ,eAAA,EAAqC;AACnC,eAAA,KAAA,CAAA,eAAA,GAA6BC,UAAU,CAACD,IAAI,CAAJA,UAAAA,CAAxC,eAAuC,CAAvC;AACD;;AACD,eAAA,IAAA;AACD;;AACD,aAAA,KAAA;AACD;;;gCAEW,CAAE;;;iCAED;AACX,aAAA,KAAA;AACD;;;wBA/CS;AACR,aAAA,eAAA;AACD;;;;EAHsCV,S;;AAmDzCa,MAAM,CAANA,OAAAA,GAAAA,0BAAAA","sourcesContent":["const _ = require('../../../utils/under-dash');\r\nconst BaseXform = require('../base-xform');\r\n\r\nclass SheetFormatPropertiesXform extends BaseXform {\r\n  get tag() {\r\n    return 'sheetFormatPr';\r\n  }\r\n\r\n  render(xmlStream, model) {\r\n    if (model) {\r\n      const attributes = {\r\n        defaultRowHeight: model.defaultRowHeight,\r\n        outlineLevelRow: model.outlineLevelRow,\r\n        outlineLevelCol: model.outlineLevelCol,\r\n        'x14ac:dyDescent': model.dyDescent,\r\n      };\r\n      if (model.defaultColWidth) {\r\n        attributes.defaultColWidth = model.defaultColWidth;\r\n      }\r\n\r\n      // default value for 'defaultRowHeight' is 15, this should not be 'custom'\r\n      if (!model.defaultRowHeight || model.defaultRowHeight !== 15) {\r\n        attributes.customHeight = '1';\r\n      }\r\n\r\n      if (_.some(attributes, value => value !== undefined)) {\r\n        xmlStream.leafNode('sheetFormatPr', attributes);\r\n      }\r\n    }\r\n  }\r\n\r\n  parseOpen(node) {\r\n    if (node.name === 'sheetFormatPr') {\r\n      this.model = {\r\n        defaultRowHeight: parseFloat(node.attributes.defaultRowHeight || '0'),\r\n        dyDescent: parseFloat(node.attributes['x14ac:dyDescent'] || '0'),\r\n        outlineLevelRow: parseInt(node.attributes.outlineLevelRow || '0', 10),\r\n        outlineLevelCol: parseInt(node.attributes.outlineLevelCol || '0', 10),\r\n      };\r\n      if (node.attributes.defaultColWidth) {\r\n        this.model.defaultColWidth = parseFloat(node.attributes.defaultColWidth);\r\n      }\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  parseText() {}\r\n\r\n  parseClose() {\r\n    return false;\r\n  }\r\n}\r\n\r\nmodule.exports = SheetFormatPropertiesXform;\r\n"]},"metadata":{},"sourceType":"script"}