{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/yashwant-intelligaia/Documents/Official/TestTasks/my-react-app/src/App.js\";\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport ExcelJS from \"exceljs/dist/es5/exceljs.browser\";\n\nfunction exportExcel() {\n  console.log('export excel');\n  return 1; // var ExcelJSWorkbook = new ExcelJS.Workbook();\n  // var worksheet = ExcelJSWorkbook.addWorksheet(\"ExcelJS sheet\");\n  // var columns = DataGrid.getVisibleColumns();\n  // worksheet.mergeCells(\"A2:I2\");\n  // const customCell = worksheet.getCell(\"A2\");\n  // customCell.font = {\n  //   name: \"Comic Sans MS\",\n  //   family: 4,\n  //   size: 20,\n  //   underline: true,\n  //   bold: true\n  // };\n  // customCell.value = \"Custom header here\";\n  // var headerRow = worksheet.addRow();\n  // worksheet.getRow(4).font = { bold: true };\n  // for (let i = 0; i < columns.length; i++) {\n  //   let currentColumnWidth = DataGrid.option().columns[i].width;\n  //   worksheet.getColumn(i + 1).width =\n  //     currentColumnWidth !== undefined ? currentColumnWidth / 6 : 20;\n  //   let cell = headerRow.getCell(i + 1);\n  //   cell.value = columns[i].caption;\n  // }\n  // if (this.state.excelFilterEnabled === true) {\n  //   worksheet.autoFilter = {\n  //     from: {\n  //       row: 3,\n  //       column: 1\n  //     },\n  //     to: {\n  //       row: 3,\n  //       column: columns.length\n  //     }\n  //   };\n  // }\n  // // eslint-disable-next-line no-unused-expressions\n  // this.state.excelFilterEnabled === true\n  //   ? (worksheet.views = [{ state: \"frozen\", ySplit: 3 }])\n  //   : undefined;\n  // worksheet.properties.outlineProperties = {\n  //   summaryBelow: false,\n  //   summaryRight: false\n  // };\n  // DataGrid.getController(\"data\")\n  //   .loadAll()\n  //   .then(function (allItems) {\n  //     for (let i = 0; i < allItems.length; i++) {\n  //       var dataRow = worksheet.addRow();\n  //       if (allItems[i].rowType === \"data\") {\n  //         dataRow.outlineLevel = 1;\n  //       }\n  //       for (let j = 0; j < allItems[i].values.length; j++) {\n  //         let cell = dataRow.getCell(j + 1);\n  //         cell.value = allItems[i].values[j];\n  //       }\n  //     }\n  //     const rowCount = worksheet.rowCount;\n  //     worksheet.mergeCells(`A${rowCount}:I${rowCount + 1}`);\n  //     worksheet.getRow(1).font = { bold: true };\n  //     worksheet.getCell(`A${rowCount}`).font = {\n  //       name: \"Comic Sans MS\",\n  //       family: 4,\n  //       size: 20,\n  //       underline: true,\n  //       bold: true\n  //     };\n  //     worksheet.getCell(`A${rowCount}`).value = \"Custom Footer here\";\n  //     ExcelJSWorkbook.xlsx.writeBuffer().then(function (buffer) {\n  //       saveAs(\n  //         new Blob([buffer], { type: \"application/octet-stream\" }),\n  //         `${DataGrid.option().export.fileName}.xlsx`\n  //       );\n  //     });\n  //   });\n}\n\nfunction App() {\n  const exportExcel = event => {\n    console.log('export excel');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: exportExcel,\n      children: \"Export\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/yashwant-intelligaia/Documents/Official/TestTasks/my-react-app/src/App.js"],"names":["ExcelJS","exportExcel","console","log","App","event"],"mappings":";;;AACA,OAAO,WAAP;AACA,OAAOA,OAAP,MAAoB,kCAApB;;AAEA,SAASC,WAAT,GAAuB;AACrBC,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACA,SAAO,CAAP,CAFqB,CAGrB;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACD;;AAED,SAASC,GAAT,GAAe;AACb,QAAMH,WAAW,GAAGI,KAAK,IAAI;AAC3BH,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACD,GAFD;;AAGA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE;AAAQ,MAAA,OAAO,EAAEF,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;KATQG,G;AAWT,eAAeA,GAAf","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport ExcelJS from \"exceljs/dist/es5/exceljs.browser\";\n\nfunction exportExcel() {\n  console.log('export excel')\n  return 1;\n  // var ExcelJSWorkbook = new ExcelJS.Workbook();\n  // var worksheet = ExcelJSWorkbook.addWorksheet(\"ExcelJS sheet\");\n  // var columns = DataGrid.getVisibleColumns();\n\n  // worksheet.mergeCells(\"A2:I2\");\n\n  // const customCell = worksheet.getCell(\"A2\");\n  // customCell.font = {\n  //   name: \"Comic Sans MS\",\n  //   family: 4,\n  //   size: 20,\n  //   underline: true,\n  //   bold: true\n  // };\n\n  // customCell.value = \"Custom header here\";\n\n  // var headerRow = worksheet.addRow();\n  // worksheet.getRow(4).font = { bold: true };\n\n  // for (let i = 0; i < columns.length; i++) {\n  //   let currentColumnWidth = DataGrid.option().columns[i].width;\n  //   worksheet.getColumn(i + 1).width =\n  //     currentColumnWidth !== undefined ? currentColumnWidth / 6 : 20;\n  //   let cell = headerRow.getCell(i + 1);\n  //   cell.value = columns[i].caption;\n  // }\n\n  // if (this.state.excelFilterEnabled === true) {\n  //   worksheet.autoFilter = {\n  //     from: {\n  //       row: 3,\n  //       column: 1\n  //     },\n  //     to: {\n  //       row: 3,\n  //       column: columns.length\n  //     }\n  //   };\n  // }\n\n  // // eslint-disable-next-line no-unused-expressions\n  // this.state.excelFilterEnabled === true\n  //   ? (worksheet.views = [{ state: \"frozen\", ySplit: 3 }])\n  //   : undefined;\n\n  // worksheet.properties.outlineProperties = {\n  //   summaryBelow: false,\n  //   summaryRight: false\n  // };\n\n  // DataGrid.getController(\"data\")\n  //   .loadAll()\n  //   .then(function (allItems) {\n  //     for (let i = 0; i < allItems.length; i++) {\n  //       var dataRow = worksheet.addRow();\n  //       if (allItems[i].rowType === \"data\") {\n  //         dataRow.outlineLevel = 1;\n  //       }\n  //       for (let j = 0; j < allItems[i].values.length; j++) {\n  //         let cell = dataRow.getCell(j + 1);\n  //         cell.value = allItems[i].values[j];\n  //       }\n  //     }\n\n  //     const rowCount = worksheet.rowCount;\n  //     worksheet.mergeCells(`A${rowCount}:I${rowCount + 1}`);\n  //     worksheet.getRow(1).font = { bold: true };\n  //     worksheet.getCell(`A${rowCount}`).font = {\n  //       name: \"Comic Sans MS\",\n  //       family: 4,\n  //       size: 20,\n  //       underline: true,\n  //       bold: true\n  //     };\n\n  //     worksheet.getCell(`A${rowCount}`).value = \"Custom Footer here\";\n\n  //     ExcelJSWorkbook.xlsx.writeBuffer().then(function (buffer) {\n  //       saveAs(\n  //         new Blob([buffer], { type: \"application/octet-stream\" }),\n  //         `${DataGrid.option().export.fileName}.xlsx`\n  //       );\n  //     });\n  //   });\n}\n\nfunction App() {\n  const exportExcel = event => {\n    console.log('export excel');\n  }\n  return (\n    <div className=\"App\">\n      <button onClick={exportExcel}>Export</button>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}