{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.NonQuotedColumnParser = void 0;\n\nconst ColumnFormatter_1 = require(\"./ColumnFormatter\");\n\nconst Token_1 = require(\"../Token\");\n\nclass NonQuotedColumnParser {\n  constructor(parserOptions) {\n    this.parserOptions = parserOptions;\n    this.columnFormatter = new ColumnFormatter_1.ColumnFormatter(parserOptions);\n  }\n\n  parse(scanner) {\n    if (!scanner.hasMoreCharacters) {\n      return null;\n    }\n\n    const {\n      parserOptions\n    } = this;\n    const characters = [];\n    let nextToken = scanner.nextCharacterToken;\n\n    for (; nextToken; nextToken = scanner.nextCharacterToken) {\n      if (Token_1.Token.isTokenDelimiter(nextToken, parserOptions) || Token_1.Token.isTokenRowDelimiter(nextToken)) {\n        break;\n      }\n\n      characters.push(nextToken.token);\n      scanner.advancePastToken(nextToken);\n    }\n\n    return this.columnFormatter.format(characters.join(''));\n  }\n\n}\n\nexports.NonQuotedColumnParser = NonQuotedColumnParser;","map":{"version":3,"sources":["../../../../src/parser/column/NonQuotedColumnParser.ts"],"names":[],"mappings":";;;;;;;AACA,MAAA,iBAAA,GAAA,OAAA,CAAA,mBAAA,CAAA;;AAEA,MAAA,OAAA,GAAA,OAAA,CAAA,UAAA,CAAA;;AAEA,MAAa,qBAAb,CAAkC;AAK9B,EAAA,WAAA,CAAmB,aAAnB,EAA+C;AAC3C,SAAK,aAAL,GAAqB,aAArB;AACA,SAAK,eAAL,GAAuB,IAAI,iBAAA,CAAA,eAAJ,CAAoB,aAApB,CAAvB;AACH;;AAEM,EAAA,KAAK,CAAC,OAAD,EAAiB;AACzB,QAAI,CAAC,OAAO,CAAC,iBAAb,EAAgC;AAC5B,aAAO,IAAP;AACH;;AACD,UAAM;AAAE,MAAA;AAAF,QAAoB,IAA1B;AACA,UAAM,UAAU,GAAG,EAAnB;AACA,QAAI,SAAS,GAAG,OAAO,CAAC,kBAAxB;;AACA,WAAO,SAAP,EAAkB,SAAS,GAAG,OAAO,CAAC,kBAAtC,EAA0D;AACtD,UAAI,OAAA,CAAA,KAAA,CAAM,gBAAN,CAAuB,SAAvB,EAAkC,aAAlC,KAAoD,OAAA,CAAA,KAAA,CAAM,mBAAN,CAA0B,SAA1B,CAAxD,EAA8F;AAC1F;AACH;;AACD,MAAA,UAAU,CAAC,IAAX,CAAgB,SAAS,CAAC,KAA1B;AACA,MAAA,OAAO,CAAC,gBAAR,CAAyB,SAAzB;AACH;;AACD,WAAO,KAAK,eAAL,CAAqB,MAArB,CAA4B,UAAU,CAAC,IAAX,CAAgB,EAAhB,CAA5B,CAAP;AACH;;AAzB6B;;AAAlC,OAAA,CAAA,qBAAA,GAAA,qBAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NonQuotedColumnParser = void 0;\nconst ColumnFormatter_1 = require(\"./ColumnFormatter\");\nconst Token_1 = require(\"../Token\");\nclass NonQuotedColumnParser {\n    constructor(parserOptions) {\n        this.parserOptions = parserOptions;\n        this.columnFormatter = new ColumnFormatter_1.ColumnFormatter(parserOptions);\n    }\n    parse(scanner) {\n        if (!scanner.hasMoreCharacters) {\n            return null;\n        }\n        const { parserOptions } = this;\n        const characters = [];\n        let nextToken = scanner.nextCharacterToken;\n        for (; nextToken; nextToken = scanner.nextCharacterToken) {\n            if (Token_1.Token.isTokenDelimiter(nextToken, parserOptions) || Token_1.Token.isTokenRowDelimiter(nextToken)) {\n                break;\n            }\n            characters.push(nextToken.token);\n            scanner.advancePastToken(nextToken);\n        }\n        return this.columnFormatter.format(characters.join(''));\n    }\n}\nexports.NonQuotedColumnParser = NonQuotedColumnParser;\n//# sourceMappingURL=NonQuotedColumnParser.js.map"]},"metadata":{},"sourceType":"script"}