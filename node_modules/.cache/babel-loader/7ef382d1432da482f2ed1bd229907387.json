{"ast":null,"code":"\"use strict\";\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nvar BaseXform = require('../base-xform');\n\nvar TableStyleInfoXform = /*#__PURE__*/function (_BaseXform) {\n  _inherits(TableStyleInfoXform, _BaseXform);\n\n  var _super = _createSuper(TableStyleInfoXform);\n\n  function TableStyleInfoXform() {\n    _classCallCheck(this, TableStyleInfoXform);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(TableStyleInfoXform, [{\n    key: \"render\",\n    value: function render(xmlStream, model) {\n      xmlStream.leafNode(this.tag, {\n        name: model.theme ? model.theme : undefined,\n        showFirstColumn: model.showFirstColumn ? '1' : '0',\n        showLastColumn: model.showLastColumn ? '1' : '0',\n        showRowStripes: model.showRowStripes ? '1' : '0',\n        showColumnStripes: model.showColumnStripes ? '1' : '0'\n      });\n      return true;\n    }\n  }, {\n    key: \"parseOpen\",\n    value: function parseOpen(node) {\n      if (node.name === this.tag) {\n        var attributes = node.attributes;\n        this.model = {\n          theme: attributes.name ? attributes.name : null,\n          showFirstColumn: attributes.showFirstColumn === '1',\n          showLastColumn: attributes.showLastColumn === '1',\n          showRowStripes: attributes.showRowStripes === '1',\n          showColumnStripes: attributes.showColumnStripes === '1'\n        };\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"parseText\",\n    value: function parseText() {}\n  }, {\n    key: \"parseClose\",\n    value: function parseClose() {\n      return false;\n    }\n  }, {\n    key: \"tag\",\n    get: function get() {\n      return 'tableStyleInfo';\n    }\n  }]);\n\n  return TableStyleInfoXform;\n}(BaseXform);\n\nmodule.exports = TableStyleInfoXform;","map":{"version":3,"sources":["../../../../../lib/xlsx/xform/table/table-style-info-xform.js"],"names":["BaseXform","require","TableStyleInfoXform","xmlStream","model","name","showFirstColumn","showLastColumn","showRowStripes","showColumnStripes","node","attributes","theme","module"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAMA,SAAS,GAAGC,OAAO,CAAzB,eAAyB,CAAzB;;IAEMC,mB;;;;;;;;;;;;;2BAKGC,S,EAAWC,K,EAAO;AACvBD,MAAAA,SAAS,CAATA,QAAAA,CAAmB,KAAnBA,GAAAA,EAA6B;AAC3BE,QAAAA,IAAI,EAAED,KAAK,CAALA,KAAAA,GAAcA,KAAK,CAAnBA,KAAAA,GADqB,SAAA;AAE3BE,QAAAA,eAAe,EAAEF,KAAK,CAALA,eAAAA,GAAAA,GAAAA,GAFU,GAAA;AAG3BG,QAAAA,cAAc,EAAEH,KAAK,CAALA,cAAAA,GAAAA,GAAAA,GAHW,GAAA;AAI3BI,QAAAA,cAAc,EAAEJ,KAAK,CAALA,cAAAA,GAAAA,GAAAA,GAJW,GAAA;AAK3BK,QAAAA,iBAAiB,EAAEL,KAAK,CAALA,iBAAAA,GAAAA,GAAAA,GAAgC;AALxB,OAA7BD;AAOA,aAAA,IAAA;AACD;;;8BAESO,I,EAAM;AACd,UAAIA,IAAI,CAAJA,IAAAA,KAAc,KAAlB,GAAA,EAA4B;AAAA,YACnBC,UADmB,GACLD,IADK,CAAA,UAAA;AAE1B,aAAA,KAAA,GAAa;AACXE,UAAAA,KAAK,EAAED,UAAU,CAAVA,IAAAA,GAAkBA,UAAU,CAA5BA,IAAAA,GADI,IAAA;AAEXL,UAAAA,eAAe,EAAEK,UAAU,CAAVA,eAAAA,KAFN,GAAA;AAGXJ,UAAAA,cAAc,EAAEI,UAAU,CAAVA,cAAAA,KAHL,GAAA;AAIXH,UAAAA,cAAc,EAAEG,UAAU,CAAVA,cAAAA,KAJL,GAAA;AAKXF,UAAAA,iBAAiB,EAAEE,UAAU,CAAVA,iBAAAA,KAAiC;AALzC,SAAb;AAOA,eAAA,IAAA;AACD;;AACD,aAAA,KAAA;AACD;;;gCAEW,CAAE;;;iCAED;AACX,aAAA,KAAA;AACD;;;wBAlCS;AACR,aAAA,gBAAA;AACD;;;;EAH+BX,S;;AAsClCa,MAAM,CAANA,OAAAA,GAAAA,mBAAAA","sourcesContent":["const BaseXform = require('../base-xform');\r\n\r\nclass TableStyleInfoXform extends BaseXform {\r\n  get tag() {\r\n    return 'tableStyleInfo';\r\n  }\r\n\r\n  render(xmlStream, model) {\r\n    xmlStream.leafNode(this.tag, {\r\n      name: model.theme ? model.theme : undefined,\r\n      showFirstColumn: model.showFirstColumn ? '1' : '0',\r\n      showLastColumn: model.showLastColumn ? '1' : '0',\r\n      showRowStripes: model.showRowStripes ? '1' : '0',\r\n      showColumnStripes: model.showColumnStripes ? '1' : '0',\r\n    });\r\n    return true;\r\n  }\r\n\r\n  parseOpen(node) {\r\n    if (node.name === this.tag) {\r\n      const {attributes} = node;\r\n      this.model = {\r\n        theme: attributes.name ? attributes.name : null,\r\n        showFirstColumn: attributes.showFirstColumn === '1',\r\n        showLastColumn: attributes.showLastColumn === '1',\r\n        showRowStripes: attributes.showRowStripes === '1',\r\n        showColumnStripes: attributes.showColumnStripes === '1',\r\n      };\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  parseText() {}\r\n\r\n  parseClose() {\r\n    return false;\r\n  }\r\n}\r\n\r\nmodule.exports = TableStyleInfoXform;\r\n"]},"metadata":{},"sourceType":"script"}