{"ast":null,"code":"\"use strict\";\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nvar BaseXform = require('../base-xform');\n\nvar HeaderFooterXform = /*#__PURE__*/function (_BaseXform) {\n  _inherits(HeaderFooterXform, _BaseXform);\n\n  var _super = _createSuper(HeaderFooterXform);\n\n  function HeaderFooterXform() {\n    _classCallCheck(this, HeaderFooterXform);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(HeaderFooterXform, [{\n    key: \"render\",\n    value: function render(xmlStream, model) {\n      if (model) {\n        xmlStream.addRollback();\n        var createTag = false;\n        xmlStream.openNode('headerFooter');\n\n        if (model.differentFirst) {\n          xmlStream.addAttribute('differentFirst', '1');\n          createTag = true;\n        }\n\n        if (model.differentOddEven) {\n          xmlStream.addAttribute('differentOddEven', '1');\n          createTag = true;\n        }\n\n        if (model.oddHeader && typeof model.oddHeader === 'string') {\n          xmlStream.leafNode('oddHeader', null, model.oddHeader);\n          createTag = true;\n        }\n\n        if (model.oddFooter && typeof model.oddFooter === 'string') {\n          xmlStream.leafNode('oddFooter', null, model.oddFooter);\n          createTag = true;\n        }\n\n        if (model.evenHeader && typeof model.evenHeader === 'string') {\n          xmlStream.leafNode('evenHeader', null, model.evenHeader);\n          createTag = true;\n        }\n\n        if (model.evenFooter && typeof model.evenFooter === 'string') {\n          xmlStream.leafNode('evenFooter', null, model.evenFooter);\n          createTag = true;\n        }\n\n        if (model.firstHeader && typeof model.firstHeader === 'string') {\n          xmlStream.leafNode('firstHeader', null, model.firstHeader);\n          createTag = true;\n        }\n\n        if (model.firstFooter && typeof model.firstFooter === 'string') {\n          xmlStream.leafNode('firstFooter', null, model.firstFooter);\n          createTag = true;\n        }\n\n        if (createTag) {\n          xmlStream.closeNode();\n          xmlStream.commit();\n        } else {\n          xmlStream.rollback();\n        }\n      }\n    }\n  }, {\n    key: \"parseOpen\",\n    value: function parseOpen(node) {\n      switch (node.name) {\n        case 'headerFooter':\n          this.model = {};\n\n          if (node.attributes.differentFirst) {\n            this.model.differentFirst = parseInt(node.attributes.differentFirst, 0) === 1;\n          }\n\n          if (node.attributes.differentOddEven) {\n            this.model.differentOddEven = parseInt(node.attributes.differentOddEven, 0) === 1;\n          }\n\n          return true;\n\n        case 'oddHeader':\n          this.currentNode = 'oddHeader';\n          return true;\n\n        case 'oddFooter':\n          this.currentNode = 'oddFooter';\n          return true;\n\n        case 'evenHeader':\n          this.currentNode = 'evenHeader';\n          return true;\n\n        case 'evenFooter':\n          this.currentNode = 'evenFooter';\n          return true;\n\n        case 'firstHeader':\n          this.currentNode = 'firstHeader';\n          return true;\n\n        case 'firstFooter':\n          this.currentNode = 'firstFooter';\n          return true;\n\n        default:\n          return false;\n      }\n    }\n  }, {\n    key: \"parseText\",\n    value: function parseText(text) {\n      switch (this.currentNode) {\n        case 'oddHeader':\n          this.model.oddHeader = text;\n          break;\n\n        case 'oddFooter':\n          this.model.oddFooter = text;\n          break;\n\n        case 'evenHeader':\n          this.model.evenHeader = text;\n          break;\n\n        case 'evenFooter':\n          this.model.evenFooter = text;\n          break;\n\n        case 'firstHeader':\n          this.model.firstHeader = text;\n          break;\n\n        case 'firstFooter':\n          this.model.firstFooter = text;\n          break;\n\n        default:\n          break;\n      }\n    }\n  }, {\n    key: \"parseClose\",\n    value: function parseClose() {\n      switch (this.currentNode) {\n        case 'oddHeader':\n        case 'oddFooter':\n        case 'evenHeader':\n        case 'evenFooter':\n        case 'firstHeader':\n        case 'firstFooter':\n          this.currentNode = undefined;\n          return true;\n\n        default:\n          return false;\n      }\n    }\n  }, {\n    key: \"tag\",\n    get: function get() {\n      return 'headerFooter';\n    }\n  }]);\n\n  return HeaderFooterXform;\n}(BaseXform);\n\nmodule.exports = HeaderFooterXform;","map":{"version":3,"sources":["../../../../../lib/xlsx/xform/sheet/header-footer-xform.js"],"names":["BaseXform","require","HeaderFooterXform","xmlStream","model","createTag","node","parseInt","text","module"],"mappings":"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","sourcesContent":["const BaseXform = require('../base-xform');\r\n\r\nclass HeaderFooterXform extends BaseXform {\r\n  get tag() {\r\n    return 'headerFooter';\r\n  }\r\n\r\n  render(xmlStream, model) {\r\n    if (model) {\r\n      xmlStream.addRollback();\r\n\r\n      let createTag = false;\r\n\r\n      xmlStream.openNode('headerFooter');\r\n      if (model.differentFirst) {\r\n        xmlStream.addAttribute('differentFirst', '1');\r\n        createTag = true;\r\n      }\r\n      if (model.differentOddEven) {\r\n        xmlStream.addAttribute('differentOddEven', '1');\r\n        createTag = true;\r\n      }\r\n      if (model.oddHeader && typeof model.oddHeader === 'string') {\r\n        xmlStream.leafNode('oddHeader', null, model.oddHeader);\r\n        createTag = true;\r\n      }\r\n      if (model.oddFooter && typeof model.oddFooter === 'string') {\r\n        xmlStream.leafNode('oddFooter', null, model.oddFooter);\r\n        createTag = true;\r\n      }\r\n      if (model.evenHeader && typeof model.evenHeader === 'string') {\r\n        xmlStream.leafNode('evenHeader', null, model.evenHeader);\r\n        createTag = true;\r\n      }\r\n      if (model.evenFooter && typeof model.evenFooter === 'string') {\r\n        xmlStream.leafNode('evenFooter', null, model.evenFooter);\r\n        createTag = true;\r\n      }\r\n      if (model.firstHeader && typeof model.firstHeader === 'string') {\r\n        xmlStream.leafNode('firstHeader', null, model.firstHeader);\r\n        createTag = true;\r\n      }\r\n      if (model.firstFooter && typeof model.firstFooter === 'string') {\r\n        xmlStream.leafNode('firstFooter', null, model.firstFooter);\r\n        createTag = true;\r\n      }\r\n\r\n      if (createTag) {\r\n        xmlStream.closeNode();\r\n        xmlStream.commit();\r\n      } else {\r\n        xmlStream.rollback();\r\n      }\r\n    }\r\n  }\r\n\r\n  parseOpen(node) {\r\n    switch (node.name) {\r\n      case 'headerFooter':\r\n        this.model = {};\r\n        if (node.attributes.differentFirst) {\r\n          this.model.differentFirst = parseInt(node.attributes.differentFirst, 0) === 1;\r\n        }\r\n        if (node.attributes.differentOddEven) {\r\n          this.model.differentOddEven = parseInt(node.attributes.differentOddEven, 0) === 1;\r\n        }\r\n        return true;\r\n\r\n      case 'oddHeader':\r\n        this.currentNode = 'oddHeader';\r\n        return true;\r\n\r\n      case 'oddFooter':\r\n        this.currentNode = 'oddFooter';\r\n        return true;\r\n\r\n      case 'evenHeader':\r\n        this.currentNode = 'evenHeader';\r\n        return true;\r\n\r\n      case 'evenFooter':\r\n        this.currentNode = 'evenFooter';\r\n        return true;\r\n\r\n      case 'firstHeader':\r\n        this.currentNode = 'firstHeader';\r\n        return true;\r\n\r\n      case 'firstFooter':\r\n        this.currentNode = 'firstFooter';\r\n        return true;\r\n\r\n      default:\r\n        return false;\r\n    }\r\n  }\r\n\r\n  parseText(text) {\r\n    switch (this.currentNode) {\r\n      case 'oddHeader':\r\n        this.model.oddHeader = text;\r\n        break;\r\n\r\n      case 'oddFooter':\r\n        this.model.oddFooter = text;\r\n        break;\r\n\r\n      case 'evenHeader':\r\n        this.model.evenHeader = text;\r\n        break;\r\n\r\n      case 'evenFooter':\r\n        this.model.evenFooter = text;\r\n        break;\r\n\r\n      case 'firstHeader':\r\n        this.model.firstHeader = text;\r\n        break;\r\n\r\n      case 'firstFooter':\r\n        this.model.firstFooter = text;\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  parseClose() {\r\n    switch (this.currentNode) {\r\n      case 'oddHeader':\r\n      case 'oddFooter':\r\n      case 'evenHeader':\r\n      case 'evenFooter':\r\n      case 'firstHeader':\r\n      case 'firstFooter':\r\n        this.currentNode = undefined;\r\n        return true;\r\n\r\n      default:\r\n        return false;\r\n    }\r\n  }\r\n}\r\n\r\nmodule.exports = HeaderFooterXform;\r\n"]},"metadata":{},"sourceType":"script"}