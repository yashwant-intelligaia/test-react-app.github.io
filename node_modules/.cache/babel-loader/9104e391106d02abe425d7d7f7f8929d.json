{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ParserOptions = void 0;\n\nconst lodash_escaperegexp_1 = __importDefault(require(\"lodash.escaperegexp\"));\n\nconst lodash_isnil_1 = __importDefault(require(\"lodash.isnil\"));\n\nclass ParserOptions {\n  constructor(opts) {\n    var _a;\n\n    this.objectMode = true;\n    this.delimiter = ',';\n    this.ignoreEmpty = false;\n    this.quote = '\"';\n    this.escape = null;\n    this.escapeChar = this.quote;\n    this.comment = null;\n    this.supportsComments = false;\n    this.ltrim = false;\n    this.rtrim = false;\n    this.trim = false;\n    this.headers = null;\n    this.renameHeaders = false;\n    this.strictColumnHandling = false;\n    this.discardUnmappedColumns = false;\n    this.carriageReturn = '\\r';\n    this.encoding = 'utf8';\n    this.limitRows = false;\n    this.maxRows = 0;\n    this.skipLines = 0;\n    this.skipRows = 0;\n    Object.assign(this, opts || {});\n\n    if (this.delimiter.length > 1) {\n      throw new Error('delimiter option must be one character long');\n    }\n\n    this.escapedDelimiter = lodash_escaperegexp_1.default(this.delimiter);\n    this.escapeChar = (_a = this.escape) !== null && _a !== void 0 ? _a : this.quote;\n    this.supportsComments = !lodash_isnil_1.default(this.comment);\n    this.NEXT_TOKEN_REGEXP = new RegExp(`([^\\\\s]|\\\\r\\\\n|\\\\n|\\\\r|${this.escapedDelimiter})`);\n\n    if (this.maxRows > 0) {\n      this.limitRows = true;\n    }\n  }\n\n}\n\nexports.ParserOptions = ParserOptions;","map":{"version":3,"sources":["../../src/ParserOptions.ts"],"names":[],"mappings":";;;;;;;;;;;;;AAAA,MAAA,qBAAA,GAAA,eAAA,CAAA,OAAA,CAAA,qBAAA,CAAA,CAAA;;AACA,MAAA,cAAA,GAAA,eAAA,CAAA,OAAA,CAAA,cAAA,CAAA,CAAA;;AAuBA,MAAa,aAAb,CAA0B;AA+CtB,EAAA,WAAA,CAAmB,IAAnB,EAA2C;;;AA5C3B,SAAA,UAAA,GAAsB,IAAtB;AAEA,SAAA,SAAA,GAAoB,GAApB;AAEA,SAAA,WAAA,GAAuB,KAAvB;AAEA,SAAA,KAAA,GAAuB,GAAvB;AAEA,SAAA,MAAA,GAAwB,IAAxB;AAEA,SAAA,UAAA,GAA4B,KAAK,KAAjC;AAEA,SAAA,OAAA,GAAyB,IAAzB;AAEA,SAAA,gBAAA,GAA4B,KAA5B;AAEA,SAAA,KAAA,GAAiB,KAAjB;AAEA,SAAA,KAAA,GAAiB,KAAjB;AAEA,SAAA,IAAA,GAAgB,KAAhB;AAEA,SAAA,OAAA,GAAkE,IAAlE;AAEA,SAAA,aAAA,GAAyB,KAAzB;AAEA,SAAA,oBAAA,GAAgC,KAAhC;AAEA,SAAA,sBAAA,GAAkC,KAAlC;AAEA,SAAA,cAAA,GAAyB,IAAzB;AAIA,SAAA,QAAA,GAA2B,MAA3B;AAEA,SAAA,SAAA,GAAqB,KAArB;AAEA,SAAA,OAAA,GAAkB,CAAlB;AAEA,SAAA,SAAA,GAAoB,CAApB;AAEA,SAAA,QAAA,GAAmB,CAAnB;AAGZ,IAAA,MAAM,CAAC,MAAP,CAAc,IAAd,EAAoB,IAAI,IAAI,EAA5B;;AACA,QAAI,KAAK,SAAL,CAAe,MAAf,GAAwB,CAA5B,EAA+B;AAC3B,YAAM,IAAI,KAAJ,CAAU,6CAAV,CAAN;AACH;;AACD,SAAK,gBAAL,GAAwB,qBAAA,CAAA,OAAA,CAAa,KAAK,SAAlB,CAAxB;AACA,SAAK,UAAL,GAAe,CAAA,EAAA,GAAG,KAAK,MAAR,MAAc,IAAd,IAAc,EAAA,KAAA,KAAA,CAAd,GAAc,EAAd,GAAkB,KAAK,KAAtC;AACA,SAAK,gBAAL,GAAwB,CAAC,cAAA,CAAA,OAAA,CAAM,KAAK,OAAX,CAAzB;AACA,SAAK,iBAAL,GAAyB,IAAI,MAAJ,CAAW,0BAA0B,KAAK,gBAAgB,GAA1D,CAAzB;;AAEA,QAAI,KAAK,OAAL,GAAe,CAAnB,EAAsB;AAClB,WAAK,SAAL,GAAiB,IAAjB;AACH;AACJ;;AA5DqB;;AAA1B,OAAA,CAAA,aAAA,GAAA,aAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ParserOptions = void 0;\nconst lodash_escaperegexp_1 = __importDefault(require(\"lodash.escaperegexp\"));\nconst lodash_isnil_1 = __importDefault(require(\"lodash.isnil\"));\nclass ParserOptions {\n    constructor(opts) {\n        var _a;\n        this.objectMode = true;\n        this.delimiter = ',';\n        this.ignoreEmpty = false;\n        this.quote = '\"';\n        this.escape = null;\n        this.escapeChar = this.quote;\n        this.comment = null;\n        this.supportsComments = false;\n        this.ltrim = false;\n        this.rtrim = false;\n        this.trim = false;\n        this.headers = null;\n        this.renameHeaders = false;\n        this.strictColumnHandling = false;\n        this.discardUnmappedColumns = false;\n        this.carriageReturn = '\\r';\n        this.encoding = 'utf8';\n        this.limitRows = false;\n        this.maxRows = 0;\n        this.skipLines = 0;\n        this.skipRows = 0;\n        Object.assign(this, opts || {});\n        if (this.delimiter.length > 1) {\n            throw new Error('delimiter option must be one character long');\n        }\n        this.escapedDelimiter = lodash_escaperegexp_1.default(this.delimiter);\n        this.escapeChar = (_a = this.escape) !== null && _a !== void 0 ? _a : this.quote;\n        this.supportsComments = !lodash_isnil_1.default(this.comment);\n        this.NEXT_TOKEN_REGEXP = new RegExp(`([^\\\\s]|\\\\r\\\\n|\\\\n|\\\\r|${this.escapedDelimiter})`);\n        if (this.maxRows > 0) {\n            this.limitRows = true;\n        }\n    }\n}\nexports.ParserOptions = ParserOptions;\n//# sourceMappingURL=ParserOptions.js.map"]},"metadata":{},"sourceType":"script"}