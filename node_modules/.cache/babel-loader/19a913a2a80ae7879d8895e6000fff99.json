{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function () {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nvar __exportStar = this && this.__exportStar || function (m, exports) {\n  for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.writeToPath = exports.writeToString = exports.writeToBuffer = exports.writeToStream = exports.write = exports.format = exports.FormatterOptions = exports.CsvFormatterStream = void 0;\n\nconst util_1 = require(\"util\");\n\nconst stream_1 = require(\"stream\");\n\nconst fs = __importStar(require(\"fs\"));\n\nconst FormatterOptions_1 = require(\"./FormatterOptions\");\n\nconst CsvFormatterStream_1 = require(\"./CsvFormatterStream\");\n\n__exportStar(require(\"./types\"), exports);\n\nvar CsvFormatterStream_2 = require(\"./CsvFormatterStream\");\n\nObject.defineProperty(exports, \"CsvFormatterStream\", {\n  enumerable: true,\n  get: function () {\n    return CsvFormatterStream_2.CsvFormatterStream;\n  }\n});\n\nvar FormatterOptions_2 = require(\"./FormatterOptions\");\n\nObject.defineProperty(exports, \"FormatterOptions\", {\n  enumerable: true,\n  get: function () {\n    return FormatterOptions_2.FormatterOptions;\n  }\n});\n\nexports.format = options => new CsvFormatterStream_1.CsvFormatterStream(new FormatterOptions_1.FormatterOptions(options));\n\nexports.write = (rows, options) => {\n  const csvStream = exports.format(options);\n  const promiseWrite = util_1.promisify((row, cb) => {\n    csvStream.write(row, undefined, cb);\n  });\n  rows.reduce((prev, row) => prev.then(() => promiseWrite(row)), Promise.resolve()).then(() => csvStream.end()).catch(err => {\n    csvStream.emit('error', err);\n  });\n  return csvStream;\n};\n\nexports.writeToStream = (ws, rows, options) => exports.write(rows, options).pipe(ws);\n\nexports.writeToBuffer = (rows, opts = {}) => {\n  const buffers = [];\n  const ws = new stream_1.Writable({\n    write(data, enc, writeCb) {\n      buffers.push(data);\n      writeCb();\n    }\n\n  });\n  return new Promise((res, rej) => {\n    ws.on('error', rej).on('finish', () => res(Buffer.concat(buffers)));\n    exports.write(rows, opts).pipe(ws);\n  });\n};\n\nexports.writeToString = (rows, options) => exports.writeToBuffer(rows, options).then(buffer => buffer.toString());\n\nexports.writeToPath = (path, rows, options) => {\n  const stream = fs.createWriteStream(path, {\n    encoding: 'utf8'\n  });\n  return exports.write(rows, options).pipe(stream);\n};","map":{"version":3,"sources":["../../src/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,MAAA,MAAA,GAAA,OAAA,CAAA,MAAA,CAAA;;AACA,MAAA,QAAA,GAAA,OAAA,CAAA,QAAA,CAAA;;AACA,MAAA,EAAA,GAAA,YAAA,CAAA,OAAA,CAAA,IAAA,CAAA,CAAA;;AAEA,MAAA,kBAAA,GAAA,OAAA,CAAA,oBAAA,CAAA;;AACA,MAAA,oBAAA,GAAA,OAAA,CAAA,sBAAA,CAAA;;AAEA,YAAA,CAAA,OAAA,CAAA,SAAA,CAAA,EAAA,OAAA,CAAA;;AACA,IAAA,oBAAA,GAAA,OAAA,CAAA,sBAAA,CAAA;;AAAS,MAAA,CAAA,cAAA,CAAA,OAAA,EAAA,oBAAA,EAAA;AAAA,EAAA,UAAA,EAAA,IAAA;AAAA,EAAA,GAAA,EAAA,YAAA;AAAA,WAAA,oBAAA,CAAA,kBAAA;AAAkB;AAAlB,CAAA;;AACT,IAAA,kBAAA,GAAA,OAAA,CAAA,oBAAA,CAAA;;AAAS,MAAA,CAAA,cAAA,CAAA,OAAA,EAAA,kBAAA,EAAA;AAAA,EAAA,UAAA,EAAA,IAAA;AAAA,EAAA,GAAA,EAAA,YAAA;AAAA,WAAA,kBAAA,CAAA,gBAAA;AAAgB;AAAhB,CAAA;;AAEI,OAAA,CAAA,MAAA,GAAwC,OAA/B,IAClB,IAAI,oBAAA,CAAA,kBAAJ,CAAuB,IAAI,kBAAA,CAAA,gBAAJ,CAAqB,OAArB,CAAvB,CADS;;AAGA,OAAA,CAAA,KAAA,GAAQ,CACjB,IADiB,EAEjB,OAFiB,KAGS;AAC1B,QAAM,SAAS,GAAG,OAAA,CAAA,MAAA,CAAO,OAAP,CAAlB;AACA,QAAM,YAAY,GAAG,MAAA,CAAA,SAAA,CAAU,CAAC,GAAD,EAAS,EAAT,KAAqD;AAChF,IAAA,SAAS,CAAC,KAAV,CAAgB,GAAhB,EAAqB,SAArB,EAAgC,EAAhC;AACH,GAFoB,CAArB;AAGA,EAAA,IAAI,CAAC,MAAL,CACI,CAAC,IAAD,EAAsB,GAAtB,KAAgD,IAAI,CAAC,IAAL,CAAU,MAAqB,YAAY,CAAC,GAAD,CAA3C,CADpD,EAEI,OAAO,CAAC,OAAR,EAFJ,EAIK,IAJL,CAIU,MAAY,SAAS,CAAC,GAAV,EAJtB,EAKK,KALL,CAKY,GAAD,IAAc;AACjB,IAAA,SAAS,CAAC,IAAV,CAAe,OAAf,EAAwB,GAAxB;AACH,GAPL;AAQA,SAAO,SAAP;AACH,CAjBY;;AAmBA,OAAA,CAAA,aAAA,GAAgB,CACzB,EADyB,EAEzB,IAFyB,EAGzB,OAHyB,KAIrB,OAAA,CAAA,KAAA,CAAM,IAAN,EAAY,OAAZ,EAAqB,IAArB,CAA0B,EAA1B,CAJK;;AAMA,OAAA,CAAA,aAAA,GAAgB,CACzB,IADyB,EAEzB,IAAA,GAAmC,EAFV,KAGR;AACjB,QAAM,OAAO,GAAa,EAA1B;AACA,QAAM,EAAE,GAAG,IAAI,QAAA,CAAA,QAAJ,CAAa;AACpB,IAAA,KAAK,CAAC,IAAD,EAAO,GAAP,EAAY,OAAZ,EAAmB;AACpB,MAAA,OAAO,CAAC,IAAR,CAAa,IAAb;AACA,MAAA,OAAO;AACV;;AAJmB,GAAb,CAAX;AAMA,SAAO,IAAI,OAAJ,CAAY,CAAC,GAAD,EAAM,GAAN,KAAmB;AAClC,IAAA,EAAE,CAAC,EAAH,CAAM,OAAN,EAAe,GAAf,EAAoB,EAApB,CAAuB,QAAvB,EAAiC,MAAY,GAAG,CAAC,MAAM,CAAC,MAAP,CAAc,OAAd,CAAD,CAAhD;AACA,IAAA,OAAA,CAAA,KAAA,CAAM,IAAN,EAAY,IAAZ,EAAkB,IAAlB,CAAuB,EAAvB;AACH,GAHM,CAAP;AAIH,CAfY;;AAiBA,OAAA,CAAA,aAAA,GAAgB,CACzB,IADyB,EAEzB,OAFyB,KAGP,OAAA,CAAA,aAAA,CAAc,IAAd,EAAoB,OAApB,EAA6B,IAA7B,CAAmC,MAAD,IAAoB,MAAM,CAAC,QAAP,EAAtD,CAHT;;AAKA,OAAA,CAAA,WAAA,GAAc,CACvB,IADuB,EAEvB,IAFuB,EAGvB,OAHuB,KAIP;AAChB,QAAM,MAAM,GAAG,EAAE,CAAC,iBAAH,CAAqB,IAArB,EAA2B;AAAE,IAAA,QAAQ,EAAE;AAAZ,GAA3B,CAAf;AACA,SAAO,OAAA,CAAA,KAAA,CAAM,IAAN,EAAY,OAAZ,EAAqB,IAArB,CAA0B,MAA1B,CAAP;AACH,CAPY","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.writeToPath = exports.writeToString = exports.writeToBuffer = exports.writeToStream = exports.write = exports.format = exports.FormatterOptions = exports.CsvFormatterStream = void 0;\nconst util_1 = require(\"util\");\nconst stream_1 = require(\"stream\");\nconst fs = __importStar(require(\"fs\"));\nconst FormatterOptions_1 = require(\"./FormatterOptions\");\nconst CsvFormatterStream_1 = require(\"./CsvFormatterStream\");\n__exportStar(require(\"./types\"), exports);\nvar CsvFormatterStream_2 = require(\"./CsvFormatterStream\");\nObject.defineProperty(exports, \"CsvFormatterStream\", { enumerable: true, get: function () { return CsvFormatterStream_2.CsvFormatterStream; } });\nvar FormatterOptions_2 = require(\"./FormatterOptions\");\nObject.defineProperty(exports, \"FormatterOptions\", { enumerable: true, get: function () { return FormatterOptions_2.FormatterOptions; } });\nexports.format = (options) => new CsvFormatterStream_1.CsvFormatterStream(new FormatterOptions_1.FormatterOptions(options));\nexports.write = (rows, options) => {\n    const csvStream = exports.format(options);\n    const promiseWrite = util_1.promisify((row, cb) => {\n        csvStream.write(row, undefined, cb);\n    });\n    rows.reduce((prev, row) => prev.then(() => promiseWrite(row)), Promise.resolve())\n        .then(() => csvStream.end())\n        .catch((err) => {\n        csvStream.emit('error', err);\n    });\n    return csvStream;\n};\nexports.writeToStream = (ws, rows, options) => exports.write(rows, options).pipe(ws);\nexports.writeToBuffer = (rows, opts = {}) => {\n    const buffers = [];\n    const ws = new stream_1.Writable({\n        write(data, enc, writeCb) {\n            buffers.push(data);\n            writeCb();\n        },\n    });\n    return new Promise((res, rej) => {\n        ws.on('error', rej).on('finish', () => res(Buffer.concat(buffers)));\n        exports.write(rows, opts).pipe(ws);\n    });\n};\nexports.writeToString = (rows, options) => exports.writeToBuffer(rows, options).then((buffer) => buffer.toString());\nexports.writeToPath = (path, rows, options) => {\n    const stream = fs.createWriteStream(path, { encoding: 'utf8' });\n    return exports.write(rows, options).pipe(stream);\n};\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"script"}